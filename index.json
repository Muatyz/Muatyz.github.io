[{"content":"该站点用于记录每日所学新知\nInterest: Condensed Matter Physics, Numerical Calculation Profile: Undergraduate ","permalink":"https://Muatyz.github.io/about/","summary":"该站点用于记录每日所学新知 Interest: Condensed Matter Physics, Numerical Calculation Profile: Undergraduate","title":"🙋🏻‍♂️关于"},{"content":"","permalink":"https://Muatyz.github.io/posts/cs/tech1/","summary":"","title":"Tech1"},{"content":"one site 单节点 Site\n意指\u0026quot;节点\u0026quot;.\n单节点的自旋为 $\\frac{1}{2}$ 的波函数,有两个基底.\n$|s=1\\rangle=|\\uparrow\\rangle;|s=2\\rangle=|\\downarrow\\rangle$\n对于一般的自旋为 $\\frac{1}{2}$ 的波函数,可以写成如下形式:\n$|\\psi\\rangle=\\sum_{s=1}^{2}\\psi_s|s\\rangle(\\psi_s\\in\\mathcal{C})$\n使用张量数学来处理这个单节点波函数, 即 $|\\psi_s\\rangle$ 对应一个有一个\u0026quot;触手\u0026quot;的结点.展开形式为 $(^{\\psi_1}_{\\psi_2})$ , $\\psi_1,\\psi_2$ 又各自是一个单\u0026quot;触手\u0026quot;的结点.\nIndex s(\u0026#34;s\u0026#34;,2); //\u0026#34;s\u0026#34;代表的是Index的命名 //2是Index的维度 ITensor psi(s); //由于只声明不定义,所以初始值为0 Index 指标\n指的是表示某种物理量的符号.这个符号 可以是矢量, 张量, 算符.\nIndex s(2,\u0026#34;s\u0026#34;); Index t(3,\u0026#34;t\u0026#34;); ITensor T(s,t); 这个表示的就是创建了一个二维的物理量,我们用$s$来标记它;物理量t则是三维的. 而Itensor的大小则是 $2\\times 3$.\n对 $|\\psi_s\\rangle$ 进行初始化操作.我们不妨将其初始化为基矢:\n$|\\psi_s\\rangle=|\\uparrow\\rangle$\nIndex s(2,\u0026#34;s\u0026#34;); //在最新的ITensor语法规范中,Index (string, int)的语法已经被弃用 //目前的语法应当是Index (int, string) ITensor psi(s); psi(s(1)) = 1; PrintData(psi); 本示例代码应该会输出:\npsi = ITensor ord=1: (dim=2|id=414|\u0026#34;s\u0026#34;) {norm=1.00 (Dense Real)} (1) 1.0000000 Operators 操作符/算子 $\\hat{A}$ 算子体现在张量网络上就是一个拥有两个\u0026quot;触手\u0026quot;的结点, 它可以和只有一个\u0026quot;触手\u0026quot;的结点结合, 从而生成一个新的只有一个触手的结点.\nITensor Sz(s,prime(s)); ITensor Sx(s,prime(s)); //prime(s)是指的对s进行共轭操作 如果要对一个向量或者矩阵进行转置,共轭等操作,我们可以用被称为上下标的操作来表示.比如, $A_{ij}^{\u0026rsquo;}=A_{ji}$, $A_{ij}^{\\dagger}=A_{ji}$ 等.\nprime(s)就代表了对指标进行上标操作所得到的量.\nPrime Level 上标级别\n指标有一个属性被称为prime level, 表示是否被某个操作升降级.默认情况下指标的上标级别为0.\n这个量的作用是用来对两个张量进行比较, 在进行某些操作时, 上标必须要满足某些需求运算才能够成立.\n比如\nIndex s(2,\u0026#34;s\u0026#34;); Index t(2,\u0026#34;2\u0026#34;); ITensor A(s,t); ITensor B(s,t);// s, t 都是上标级别为 0 的指标 C = A * prime(B);// prime(B) 表示将 B 中的所有指标上标级别加 1 在这里, A * prime(B)就是一个不允许指标重复的操作.所以为了完成这个计算,我们需要对B进行上标级别升级的操作,也就是使用prime()函数.\n现在我们来对 $\\hat{S}_z,\\hat{S}_x$ 算子进行定义.\nITensor Sz(s,prime(s)),Sx(s,prime(s)); // commaInit(Sz,s,prime(s)) = 0.5, 0.0, // 0.0,-0.5; // commaInit(Sx,s,prime(s)) = 0.0, 0.5, // 0.5, 0.0; //commaInit的语法已经被弃用, 应当使用.set() //Sz Sz.set(s(1),prime(s)(1),0.5); Sz.set(s(2),prime(s)(2),-0.5); //Sx Sx.set(s(1),prime(s)(2),0.5); Sx.set(s(2),prime(s)(1),0.5);//设置分量 现在我们尝试对波函数 $|\\psi\\rangle$ 进行求某方向自旋的操作.\n即方程上的\n$$ (\\hat{S_{x}})_{s\u0026rsquo;}^{s}\\psi_{s} $$\n对应的是\nITensor phi = Sx * psi; (注意算符的上标要和波函数的下标相同, 这样的操作才是被允许的. $s$和$s\u0026rsquo;$的上标等级不同, 所以是不匹配的)\n为了研究经过求自旋的量 $|\\phi\\rangle$ 的具体情况, 我们将其输出在终端:\nITensor phi = Sx * psi; PrintData(phi); 输出的结果应该是:\nphi = ITensor ord=1: (dim=2|id=816|\u0026#34;s\u0026#34;)\u0026#39; {norm=0.50 (Dense Real)} (2) 0.5000000 我们来看看更多的结果. 如果有 $|\\psi_s\\rangle=(|^{\\cos{\\frac{\\theta}{2}}}_{\\sin{\\frac{\\theta}{2}}}\\rangle)_{\\theta=\\frac{\\pi}{4}}$, 那么我们可以这样描述:\nReal theta = Pi/4; // psi(s(1)) = cos(theta/2); // psi(s(2)) = sin(theta/2); //该语法已被弃用,使用.set()替代 psi.set(s(1),cos(theta/2)); psi.set(s(2),sin(theta/2)); PrintData(psi); 终端会输出\npsi = ITensor ord=1: (dim=2|id=977|\u0026#34;s\u0026#34;) {norm=1.00 (Dense Real)} (1) 0.9238795 (2) 0.3826834 期望值 $\\langle\\hat{A}\\rangle$ 在物理上我们定义算符 $\\hat{A}$ 的期望值为 $\\langle\\psi|\\hat{A}|\\psi\\rangle$.\n我们不妨求自旋算符 $\\hat{S_z}$ 的期望值. 在张量网络上, 这个过程体现为, 作为算符的\u0026quot;具有上下两个触手的结点\u0026quot;的每个触手分别连接一个\u0026quot;只有单触手的结点\u0026quot;(也就是代表着单节点波函数).\n我们用程序语言来描述这个过程:\nITensor cpsi = dag(prime(psi)); // Real zz = (cpsi * Sz * psi).toReal(); // Real xx = (cpsi * Sx * psi).toReal(); // toReal()函数已弃用,使用.real()替代 Real zz = (cpsi * Sz * psi).real(); Real xx = (cpsi * Sx * psi).real(); // println(\u0026#34;\u0026lt;Sz\u0026gt;=\u0026#34;,zz); // println(\u0026#34;\u0026lt;Sx\u0026gt;=\u0026#34;,xx); // println()已弃用,使用printfln()替代 printfln(\u0026#34;\u0026lt;Sz\u0026gt;=\u0026#34;,zz); printfln(\u0026#34;\u0026lt;Sx\u0026gt;=\u0026#34;,xx); 其中ITensor cpsi = dag(prime(psi));就是一个将 $\\psi$ 先取转置后取共轭的过程, 所以cpsi的上标级数为$2$. 我们也可以推测得知, 算符 $\\hat{S}_x,\\hat{S}_z$的上标级数为$1$.\n终端输出为\n\u0026lt;Sz\u0026gt;=0.353553 \u0026lt;Sx\u0026gt;=0.353553 观察到 $\\sqrt{\\langle S_z\\rangle ^2 + \\langle S_x\\rangle ^2} = \\frac{1}{2}$\n我们可以将这个过程进行类似结合率的分析:\n$\\langle\\psi|\\hat{S}_z|\\psi\\rangle = \\langle\\psi|\\hat{S}_z\\psi\\rangle$.\n用代码来描述结合律的过程:\nITensor Zpsi = Sz * psi; //因为Sz以s为上标,psi以s为下标,所以允许运算 ITensor expect = cpsi * Zpsi; Real zz = expect.real() Quiz $1$ 解析 提示\n原文所提示的函数elt()已经弃用.所以采用的是传统的prime(A) * B方式. 如果你想使用函数而非 *来得到内积, 你应当采用函数inner()\n#include \u0026#34;itensor/all.h\u0026#34; #include \u0026#34;itensor/util/print_macro.h\u0026#34; using namespace itensor; int main(){ // Define our Index // (the space we are working with) auto s = Index(2,\u0026#34;s\u0026#34;); // Operators auto Sx = ITensor(s,prime(s)); Sx.set(s(1),prime(s)(2),0.5); Sx.set(s(2),prime(s)(1),0.5); PrintData(Sx); // Single-site wavefunction auto psi = ITensor(s); //initialized to zero // TODO // 1. make the above wavefunction // the (normalized) positive Sx eigenstate psi.set(s(1),1/sqrt(2)); psi.set(s(2),1/sqrt(2)); PrintData(psi); // TODO // 2. Compute |phi\u0026gt; = Sx |psi\u0026gt; using // the Sx and psi ITensors above // AND // compute: auto olap = \u0026lt;psi|phi\u0026gt; // using the * operator and elt(...) method. // Print the result with PrintData(...). auto phi = Sx * psi; auto olap = prime(psi) * phi; //auto olap = elt(prime(psi),phi); PrintData(olap); // TODO // 3. Try normalizing |phi\u0026gt; and recompute // the inner product \u0026lt;psi|phi\u0026gt; // Print the result with PrintData(...). // HINT: use phi /= norm(phi)) to normalize. phi /= norm(phi); //auto olap2 = eltC(prime(psi),phi); auto olap2 = prime(psi) * phi; PrintData(olap2); return 0; } 输出得到:\nSx = ITensor ord=2: (dim=2|id=15|\u0026#34;s\u0026#34;) (dim=2|id=15|\u0026#34;s\u0026#34;)\u0026#39; {norm=0.71 (Dense Real)} (2,1) 0.5000000 (1,2) 0.5000000 psi = ITensor ord=1: (dim=2|id=15|\u0026#34;s\u0026#34;) {norm=1.00 (Dense Real)} (1) 0.7071068 (2) 0.7071068 olap = ITensor ord=0: {norm=0.50 (Dense Real)} 0.5000000 olap2 = ITensor ord=0: {norm=1.00 (Dense Real)} 1.0000000 Two Sites 双节点 纠缠态 对于双自旋的波函数, 我们一般的描述方程是:\n$$ |\\Psi\\rangle = \\sum_{s_1,s_2 = 1}^{2}\\psi_{s_1s_2}|s_1\\rangle|s_2\\rangle $$\n体现在张量网络上, 就是一个结点在同一方向上同时有着两个\u0026quot;触手\u0026quot;. 对于我们写出来的态, 我们可以分离出两个单态(Singlet).\n程序上的描述方法:\n// Index s1(2,\u0026#34;s1\u0026#34;,Site), s2(2,\u0026#34;s2\u0026#34;,Site); // 该语法已经被弃用,使用两步语法来替代 Index s1(2,\u0026#34;s1\u0026#34;);s1.addTags(\u0026#34;Site\u0026#34;); Index s2(2,\u0026#34;s2\u0026#34;);s1.addTags(\u0026#34;Site\u0026#34;); ITensor psi(s1,s2); //只声明不定义,则默认为0 // psi(s1(1),s2(2)) = 1./sqrt(2); // psi(s1(2),s2(1)) =-1./sqrt(2); // 该语法已被弃用,使用.set()来替代. psi.set(s1(1),s2(2), 1./sqrt(2)); psi.set(s1(2),s2(1),-1./sqrt(2)); PrintData(psi); Index s1(2,\u0026quot;s1\u0026quot;);s1.addTags(\u0026quot;Site\u0026quot;);代表的含义是创建一个维数为int,标签(或者理解为\u0026quot;名字\u0026quot;,一般是指物理上的状态,比如自旋,粒子位置等等)为string,指标类型为Site的物理量.同时使用ITensor psi(s1,s2)将s1和s2设置为纠缠态(Entangled State).\n现在要说明的就是指标(Index)的类型:Site和Link.\nSite表示单个量子位的物理态. 适用于表示单个自旋,单个粒子的位置等等. 与之配对的维数int表示的是该量子位可以取的物理态的数量;\nLink表示的是不同量子位之间的相互作用. 这种相互作用通常表示不同量子位的链接, 适用于表示各种相互作用, 比如哈密顿量等.\n(还有表示不同于Site和Link类型的其它指标类型, 比如Bulk)\n上面的代码中我们用Site来标记两个量子位,并且使其结合为纠缠态.\n结果输出为\npsi = ITensor ord=2: (dim=2|id=324|\u0026#34;s1,Site\u0026#34;) (dim=2|id=127|\u0026#34;s2\u0026#34;) {norm=1.00 (Dense Real)} (2,1) -0.707107 (1,2) 0.7071068 哈密顿量$\\hat{H}$ 我们写出双自旋系统的哈密顿量方程:\n$\\hat{H}=\\hat{S}_1\\cdot\\hat{S}_2=S_1^zS_2^z+\\frac{1}{2}S_1^+S_2^-+\\frac{1}{2}S_1^-S_2^+$\n其中 $S_1^\\pm, S_2^\\pm$ 是升降算符. 我们在程序中这样创建:\nIndex s1(2,\u0026#34;s1\u0026#34;);s1.addTags(\u0026#34;Site\u0026#34;); Index s2(2,\u0026#34;s2\u0026#34;);s1.addTags(\u0026#34;Site\u0026#34;); ITensor Sz1(s1,prime(s1)),Sp1(s1,prime(s1)),Sm1(s1,prime(s1)); ITensor Sz2(s2,prime(s2)),Sp2(s2,prime(s2)),Sm2(s2,prime(s2)); // commaInit(Sp1,s1,prime(s1)) = 0, 1, // 0, 0; // commaInit语法已被弃用. //Sz1,Sz2 Sz1.set(s1(1),prime(s1)(1),0.5);Sz1.set(s1(2),prime(s1)(2),-0.5); Sz2.set(s2(1),prime(s2)(1),0.5);Sz2.set(s2(2),prime(s2)(2),-0.5); //Sp1,Sp2 Sp1.set(s1(1),prime(s1)(2),1);Sp2.set(s2(1),prime(s2)(2),1); //Sm1,Sm2 Sm1.set(s1(2),prime(s1)(1),1);Sm2.set(s2(2),prime(s2)(1),1); ITensor H = Sz1 * Sz2 + 0.5 * Sp1 * Sm2 + 0.5 * Sm1 * Sp2; PrintData(H);//你也可以尝试执行printfln(\u0026#34;H=\u0026#34;,H); 执行后可以得到结果\nH = ITensor ord=4: (dim=2|id=397|\u0026#34;s1,Site\u0026#34;) (dim=2|id=397|\u0026#34;s1,Site\u0026#34;)\u0026#39; (dim=2|id=53|\u0026#34;s2\u0026#34;) (dim=2|id=53|\u0026#34;s2\u0026#34;)\u0026#39; {norm=0.87 (Dense Real)} (1,1,1,1) 0.2500000 (2,2,1,1) -0.250000 (1,2,2,1) 0.5000000 (2,1,1,2) 0.5000000 (1,1,2,2) -0.250000 (2,2,2,2) 0.2500000 这表明这是一个四阶张量,并且由索引s1, s1', s2, s2'来描述. 它们各自的维度都是$2$, 即它们可以取值为$1$或$2$.这就是(i,j,k,l)中1或者2的含义, 后面的值是对应的张量元素.\n这样计算得来的 $\\hat{H}$ 在张量网络中表示一个上下各自有两个\u0026quot;触手\u0026quot;的结点, 恰好可以和表现为在某一方向上拥有两个\u0026quot;触手\u0026quot;的纠缠态结点进行结合.\n更具体地说, 我们上面创建的 $\\hat{H}$ 的上标是s1'和s2',下标是s1和s2; 而 $\\psi$ 的上标是s1和s2,两者进行结合就可以得到只有两个上标s1'和s2'的新节点 $\\hat{H}\\psi$ .\n程序上这样描述这个结合的过程:\nITensor Hpsi = H * psi; //Hpsi.mapprime(1,0);//该语句的作用是将Hpsi中所有上标级别为1的索引全部降为0,使得之后的运算能够被允许 //该语法已被弃用. 使用.noPrime()来代替 Hpsi.noPrime(); Real E = (dag(psi) * Hpsi).real(); //Print()语法已被弃用, 使用PrintData()来代替. PrintData(E); 能够在终端得到输出\nE = -0.75 当然这个过程也可以一行语句完成:\nReal E = (dag(prime(psi)) * H * psi).real(); PrintData(E); 输出的结果同样是\nE = -0.75 Quiz $2$ 解析 这个题目的背景是, 使用虚时间演化的方式来找到哈密顿量所对应的基态. 对应的方程是\n$e^{-\\beta H/2}|0\\rangle\\propto|\\Psi_0\\rangle$\n#include \u0026#34;itensor/all.h\u0026#34; #include \u0026#34;itensor/util/print_macro.h\u0026#34; using namespace itensor; //定义生成Sp Sm Sz的函数 ITensor makeSp(Index const\u0026amp; s){ auto Sp = ITensor(s,prime(s)); Sp.set(s=2,prime(s)=1, 1); return Sp; } ITensor makeSm(Index const\u0026amp; s){ auto Sm = ITensor(s,prime(s)); Sm.set(s=1,prime(s)=2,1); return Sm; } ITensor makeSz(Index const\u0026amp; s){ auto Sz = ITensor(s,prime(s)); Sz.set(s=1,prime(s)=1,+0.5); Sz.set(s=2,prime(s)=2,-0.5); return Sz; } int main(){ // Initial product state auto s1 = Index(2,\u0026#34;s1\u0026#34;);auto s2 = Index(2,\u0026#34;s2\u0026#34;); auto psi = ITensor(s1,s2); psi.set(s1=1,s2=2,1.0); PrintData(psi); // Single-site operators auto Sz1 = makeSz(s1);auto Sz2 = makeSz(s2); auto Sp1 = makeSp(s1);auto Sp2 = makeSp(s2); auto Sm1 = makeSm(s1);auto Sm2 = makeSm(s2); // Two-site Heisenberg Hamiltonian auto H = Sz1 * Sz2 + 0.5 * Sp1 * Sm2 + 0.5 * Sm1 * Sp2; // Initial energy expectation value auto initEn = elt(dag(prime(psi)) * H * psi); printfln(\u0026#34;\\nInitial energy = %.10f\u0026#34;,initEn); // Make exp(-beta*H) // TODO // 3. Adjust beta to get the ground state Real beta = 0.1; auto expH = expHermitian(H,-beta); // Here we apply exp(-beta*H), normalize // and unprime auto psibeta = expH * psi; psibeta.noPrime(); psibeta /= norm(psibeta); PrintData(psibeta); auto En = elt(dag(prime(psibeta)) * H * psibeta); printfln(\u0026#34;At beta=%.1f, energy = %.10f\u0026#34;,beta,En); // TODO // 1. Adjust the following code to // truncate to dimension 1. // HINT: use the ITensor named argument // system, e.g. {\u0026#34;MaxDim=\u0026#34;,...} auto [U,D,V] = svd(psibeta,{s1},{\u0026#34;MaxDim=\u0026#34;,1}); PrintData(D); // TODO // 2. Calculate the overlap of the new // wavefunction with the old wavefunction. // Print your results with PrintData(...). // HINT: use U*D*V to calculate the new, // truncated wavefunction auto newpsi = U * D * V; PrintData(newpsi); Real op = (dag(prime(newpsi)) * H * psibeta).real(); PrintData(op); // TODO // 3. Increase beta (defined above) to get the // ground state. How does the overlap // change? return 0; } 输出得到.\npsi = ITensor ord=2: (dim=2|id=311|\u0026#34;s1\u0026#34;) (dim=2|id=239|\u0026#34;s2\u0026#34;) {norm=1.00 (Dense Real)} (1,2) 1.0000000 Initial energy = -0.2500000000 psibeta = ITensor ord=2: (dim=2|id=311|\u0026#34;s1\u0026#34;) (dim=2|id=239|\u0026#34;s2\u0026#34;) {norm=1.00 (Dense Real)} (2,1) -0.049896 (1,2) 0.9987544 At beta=0.1, energy = -0.2998339973 D = ITensor ord=2: (dim=1|id=426|\u0026#34;U,Link\u0026#34;) (dim=1|id=228|\u0026#34;V,Link\u0026#34;) {norm=1.00 (Diag Real)} (1,1) 0.9987544 newpsi = ITensor ord=2: (dim=2|id=311|\u0026#34;s1\u0026#34;) (dim=2|id=239|\u0026#34;s2\u0026#34;) {norm=1.00 (Dense Real)} (1,2) 0.9987544 op = -0.274295 所以只要我们一直调整beta的取值反复编译执行, 最后就能够找到能量最低时所对应的beta值.\nSVD 奇异值分解 Singular Value Decomposition\n如果M是 $m\\times m$ 的矩阵, 那么一定存在这样一个式子:\n$M = U \\Sigma V^*$\n其中$U$是 $m\\times m$ 的酉矩阵, $\\Sigma$ 是 $m\\times n$ 非负实数对焦矩阵, $V^*$ 是 $n\\times n$ 的酉矩阵.\n其中 $\\Sigma$ 对角线上的元素 $\\Sigma_{i,i}$ 是 $M$ 的奇异值.\n密度矩阵重整化群 Density Matrix Renormalization Group\n该方法通过矩阵乘积态(Matrix Product State,MPS)来表示量子多体系统的波函数等. DMRG方法来源于密度矩阵的理论和重整化群的思想, 大幅减少系统自由度的同时保留了系统中的物理特征.\n对于\n$$ M= \\begin{bmatrix} 0.435839 \u0026amp; 0.223707 \u0026amp; 0.10\\\\ 0.435839 \u0026amp; 0.223707 \u0026amp; -0.10 \\\\ 0.223707 \u0026amp; 0.435839 \u0026amp; 0.10 \\\\ 0.223707 \u0026amp; 0.435839 \u0026amp; -0.10 \\\\ \\end{bmatrix} $$\n可以分解为 $A * D * B$:\n$$ \\begin{bmatrix} 0.5 \u0026amp;-0.5 \u0026amp; 0.5 \\\\ 0.5 \u0026amp;-0.5 \u0026amp;-0.5 \\\\ 0.5 \u0026amp; 0.5 \u0026amp; 0.5 \\\\ 0.5 \u0026amp; 0.5 \u0026amp;-0.5 \\\\ \\end{bmatrix}* \\begin{bmatrix} 0.933 \u0026amp; 0 \u0026amp; 0 \\\\ 0 \u0026amp; 0.300 \u0026amp; 0 \\\\ 0 \u0026amp; 0 \u0026amp; 0.200 \\\\ \\end{bmatrix}* \\begin{bmatrix} 0.707107 \u0026amp; 0.707107 \u0026amp; 0 \\\\ -0.707107 \u0026amp; 0.707107 \u0026amp; 0 \\\\ 0 \u0026amp; 0 \u0026amp; 1 \\\\ \\end{bmatrix} $$\n可以看出, 两边的矩阵 $A,B$ 满足酉矩阵的定义, 即有 $A^{\\dagger}A=I,BB^{\\dagger}=I$.而对角矩阵 $D$ ,元素是非负实数且降序排列.\n如果我们从后往前一步步去除 $D$ 对角线上的元素, 即\n$$ \\begin{bmatrix} 0.933 \u0026amp; 0 \u0026amp; 0 \\\\ 0 \u0026amp; 0.300 \u0026amp; 0 \\\\ 0 \u0026amp; 0 \u0026amp; 0.200 \\\\ \\end{bmatrix} \\rightarrow \\begin{bmatrix} 0.933 \u0026amp; 0 \u0026amp; 0 \\\\ 0 \u0026amp; 0.300 \u0026amp; 0 \\\\ 0 \u0026amp; 0 \u0026amp; 0 \\\\ \\end{bmatrix} \\rightarrow \\begin{bmatrix} 0.933 \u0026amp; 0 \u0026amp; 0 \\\\ 0 \u0026amp; 0 \u0026amp; 0 \\\\ 0 \u0026amp; 0 \u0026amp; 0 \\\\ \\end{bmatrix} $$\n这种操作被称为截断(Truncating).\n然后依次重新进行 $M_{i} = A * D_{i} * B$ 合成, 并且使用范数 $||M_i - M||^2$ 来对合成后的矩阵产生的偏差程度进行评估.我们将可以看到:\n$$ ||M - M||^2 = 0;\\ ||M - M_1||^2 = (0.2)^2;\\ ||M - M_2||^2 = (0.2)^2 + (0.3)^2; $$\n我们不难看出, 其实截断就是在降低矩阵 $D$ 的秩, 通过把握这个截断的幅度, 我们就可以控制最后产生 $M_i$ 矩阵的偏差程度. 这是一个用精度换速度的过程.\n双自旋波函数 我们不妨用更物理一点的背景来分析奇异值分解的过程.\n对于一个纠缠态的双自旋系统, 我们已经知道可以处理为一个具有两个\u0026quot;触手\u0026quot;(即上标)的结点. 但是我们也可以将其作为一个矩阵来处理, 即一个拥有左右两个\u0026quot;触手\u0026quot;的结点.\n$-^{s_1} -\\square\\square\\square^{\\psi}-^{s_2}-$\n这样, 我们就可以对中间的结点进行SVD操作, 这样就形成了一个项链式的结构:\n$-^{s_1} -\\square^{A}-\\square^{D}-\\square^{B}-^{s_2}-$\n这种波函数形式, 我们将其称之为\u0026quot;矩阵乘积态\u0026quot;(Matrix Product State,MPS).\n为了让这个结构看上去更像是一个波函数,可以想象两侧的\u0026quot;触手\u0026quot;是向上的(上标).\n不妨用程序来描述这个过程.\nITensor A(s1),D,B; //先声明后使用 svd(psi,A,D,B); 我们已经知道, 对于一个寻常的双自旋波函数, 我们需要 $(2s + 1)^2$ 个参数来进行描述. 而且一般情况下, 我们对于这些参数的重要程度是无知的.无法放弃任何一个参数, 这就会急剧增加计算量.\n而SVD给了我们一种可能: 我们不仅能知道哪些参数最重要, 我们还可以很大程度上掌握它们的数量, 而且这个数量很有可能很少(有利于计算!).\n我们用方程来表达矩阵乘积态的思想:\n$$ |\\Psi\\rangle=\\sum_{s_1,\\alpha,\\alpha\u0026rsquo;,s_2}A_{s_1\\alpha}D_{\\alpha\\alpha\u0026rsquo;}B_{\\alpha\u0026rsquo;s_2}|s_1\\rangle|s_2\\rangle $$\n当然我们也可以将矩阵 $A,D$ 预先相乘形成新矩阵 $\\psi$, 张量网络的形式即为:\n$-^{s_1} -\\square^{A}-\\square^{D}-\\square^{B}-^{s_2}-$\n$\\downarrow$\n$-^{s_1} -\\square\\square^{\\psi}-\\square^{B}-^{s_2}-$\n这样我们就得到了\n$$ |\\Psi\\rangle=\\sum_{s_1,\\alpha\u0026rsquo;,s_2}\\psi_{s_1\\alpha\u0026rsquo;}B_{\\alpha\u0026rsquo;s_2}|s_1\\rangle|s_2\\rangle $$\n同理, 我们也可以将矩阵 $D,B$ 预先相乘形成新矩阵 $\\psi$, 张量积算网络的形式为\n$-^{s_1} -\\square^{A}-\\square^{D}-\\square^{B}-^{s_2}-$\n$\\downarrow$\n$-^{s_1} -\\square^{A}-\\square\\square^{\\psi}-^{s_2}-$\n这样我们就得到了\n$$ |\\Psi\\rangle=\\sum_{s_1,\\alpha,s_2}A_{s_1\\alpha}\\psi_{\\alpha s_2}|s_1\\rangle|s_2\\rangle $$\nQuiz $3$ 解析 #include \u0026#34;itensor/all.h\u0026#34; #include \u0026#34;itensor/util/print_macro.h\u0026#34; using namespace itensor; int main(){ // SVD of matrix M int Nrow = 4;int Ncol = 3; auto maxdim = std::min(Nrow,Ncol);//确定截断维度 auto M = Matrix(Nrow,Ncol); M(0,0) = 0.435839; M(0,1) = 0.223707; M(0,2) = 0.10; M(1,0) = 0.435839; M(1,1) = 0.223707; M(1,2) = -0.10; M(2,0) = 0.223707; M(2,1) = 0.435839; M(2,2) = 0.10; M(3,0) = 0.223707; M(3,1) = 0.435839; M(3,2) = -0.10;//初始化矩阵 Print(M); //声明变量的数据类型 Matrix U,V; Vector d;//用来接收对角元素,即奇异值 SVD(M,U,d,V); Print(U);Print(d);Print(V); int nkeep = 2;//取矩阵的截断维度 auto Dtrunc = Matrix(maxdim,maxdim);//只声明不定义,则初始化为0 for(auto j : range(nkeep)){ Dtrunc(j,j) = d(j); }//在对角线上填上截断保留的奇异值 auto Mtrunc = U*Dtrunc*transpose(V);//重新结合形成采取截断后的矩阵 Print(Mtrunc); auto diff = norm(M-Mtrunc);auto diff2 = sqr(diff);//取矩阵差的范数来评估截断的效果(diff) printfln(\u0026#34;|M-Mtrunc|^2 = %.2f\u0026#34;,diff2); // SVD of two-site wavefunction auto s1 = Index(2,\u0026#34;s1\u0026#34;);auto s2 = Index(2,\u0026#34;s2\u0026#34;);//声明指标 auto sing = ITensor(s1,s2);auto prod = ITensor(s1,s2); //Make sing a singlet sing.set(s1=1,s2=2, 1./sqrt(2));sing.set(s1=2,s2=1,-1./sqrt(2)); //Make prod a product state prod.set(s1=1,s2=2,1.); for(Real mix = 0; mix \u0026lt;= 1.; mix += 0.1){ // TODO: ADD CODE here to create // a new wavefunction that is // (1-mix) times a product state plus (mix) // times a singlet (i.e. maximally entangled state). auto wf = (1. - mix) * prod + mix * sing; wf /= norm(wf); //PrintData(wf); // SVD this wavefunction and analyze the results. // Try computing and plotting the entanglement entropy. ITensor A(s1),D,B; Spectrum spec = svd(wf,A,D,B); //PrintData(U);PrintData(D);PrintData(V); auto ent = 0.; //.eig(n)返回的是第(n+1)个本征值,这是因为数组下标从0开始;.numEigsKept()则是表示的特征值的数目 for(int n = 0;n \u0026lt; spec.numEigsKept();n++){ auto P = sqr(spec.eig(n)); if(P \u0026gt; 0) ent -= P*log(P); } //分别以两位小数和六位小数的形式输出 printfln(\u0026#34;mix = %.2f, entropy = %.6f\\n\u0026#34;, mix, ent); } return 0; } 为了节省篇幅,原本需要多次执行的PrintData()函数被注释了. 如果你有查看其具体数值的需要可以在自己使用的时候启用.\n编译完成执行,在终端输出:\nM = |0.4358390 0.2237070 0.1000000| |0.4358390 0.2237070 -0.100000| |0.2237070 0.4358390 0.1000000| |0.2237070 0.4358390 -0.100000| U = |0.5000000 0.5000000 0.5000000| |0.5000000 0.5000000 -0.500000| |0.5000000 -0.500000 0.5000000| |0.5000000 -0.500000 -0.500000| d = 0.932739 0.3 0.2 V = |0.7071068 0.7071068 1.11671818E-16| |0.7071068 -0.707107 -8.81355030E-17| |-1.66426876E-17 -1.41285111E-16 1.0000000| Mtrunc = |0.4358390 0.2237070 -2.89544043E-17| |0.4358390 0.2237070 -2.89544043E-17| |0.2237070 0.4358390 1.34311222E-17| |0.2237070 0.4358390 1.34311222E-17| |M-Mtrunc|^2 = 0.04 mix = 0.00, entropy = 0.000000 mix = 0.10, entropy = 0.010473 mix = 0.20, entropy = 0.042683 mix = 0.30, entropy = 0.094817 mix = 0.40, entropy = 0.160729 mix = 0.50, entropy = 0.230729 mix = 0.60, entropy = 0.293765 mix = 0.70, entropy = 0.340279 mix = 0.80, entropy = 0.364548 mix = 0.90, entropy = 0.365602 mix = 1.00, entropy = 0.346574 Four 四结点 对于四节点的矩阵乘积态，我们可以用这样一个方程式来描述：\n$$ |\\Psi\\rangle=\\sum_{{s},{\\alpha}}M_{\\alpha_1}^{s_1}M_{\\alpha_1\\alpha_2}^{s_2}M_{\\alpha_2\\alpha_3}^{s_3}M_{\\alpha_4}^{s_4}|s_1s_2s_3s_4\\rangle $$\n前面我们已经学习过怎么处理将两个单节点结合为纠缠态的双节点. 所以我们这里可以将具有 $s_3$ 和 $s_4$ 上标的两个单节点组合形成具有 $s_3$ 和 $s_4$ 上标的纠缠态双节点.\n然后就是刚才所学的将双节点进行SVD分解, 而这里我们要分解的对象就是刚才合成的纠缠态双节点。\n为了继续保持四节点的性质，我们将分解出的A,D和B中的A与D结合,其上标是 $s_3$ ,而剩下来的B则单独作为结点, 其上标是 $s_4$.\n以这种方式得到的新的四节点张量, 我们称之为\u0026quot;右正交\u0026quot;(Right Orthogonal)或者说\u0026quot;右规范\u0026quot;, 这是因为单独作为结点的 $B$ 是 酉的 ($BB^{\\dagger}=I$).\n显然, 这种右正交的性质是可以向左传递的. 比如, 我们取已经完成了SVD和AD结合的四节点张量中的具有 $s_2$ 和 $s_3$ 上标的单节点重复上述操作, 便可以让具有上标 $s_3$ 的单节点也具有右正交的性质.依此类推, 使得除了 $s_1$ 之外的所有单节点都具有右正交的性质.\n期望值 $\\langle\\hat{A}_1\\rangle$ 我们考虑一个具有4量子位的纠缠态波函数求第一量子位算符的期望值的过程.\n在一般情况下,我们通常是这样求解的(假设 $|\\psi\\rangle$ 已经规一化):\n$$ \\langle\\hat{A_1}\\rangle=\\sum_{s}\\overline{\\psi}_{s\u0026rsquo;_{1}s_{2}s_{3}s_{4}}A_{s\u0026rsquo;_{1}s_{1}}\\psi_{s_{1}s_{2}s_{3}s_{4}} $$\n这个过程显然是及其繁杂的, 在这种情况下时间复杂度以 $O(2^n)$ 的速度增长, 如果不以某种算法进行简化必然极其耗时.\n如果是已经经过了 SVD 分解的纠缠态波函数, 除了第一量子位 $s_1$ , 其余的所有单节点全部都具有右正交性质, 而我们求的是第一量子位的算符的期望值, 这也意味着其余量子位结合不会对第一量子位的运算产生任何影响.\n通过这样的算法, 计算量得到了大量简化.\n用程序语言来描述这个过程:\nSpinHalf sites(N); //表示sites是N个1/2自旋量子位的体系 MPS psi(sites); //以矩阵乘积态表示sites体系的波函数, 并且用psi来称呼这个波函数 computeGroundState(H,psi);//寻找哈密顿量H下的基态, psi被用以进行初始化 psi.position(2);//将psi的正则位置设置为第二个位置. Real sz_expect = (dag(prime(psi.A(2),Site)) * sites.op(\u0026#34;Sz\u0026#34;,2) * psi.A(2)).real(); 正则位置Canonical Position\n在前面的SVD和regroup过程中我们只提到了\u0026quot;右规范\u0026quot;, 实际上我们也很容易将其推广到\u0026quot;左规范\u0026quot;, 这样的话我们就可以将正则位置定义为\u0026quot;左规范\u0026quot;和\u0026quot;右规范\u0026quot;同时成立的位置.\n在上面的例子中,因为我们要求的是第二量子位的自旋期望值, 为了简化我们就要将其左右的全部结点都规范化(具体结合的方向看正则位置的左右).\nQuiz $4$ 解析 矩阵乘积算子Matrix Product Operator(MPO)\n和矩阵乘积态(MPS)相似, MPO也是一种张量网络的表示方法. 它可以用来描述复杂量子系统的哈密顿量.\n#include \u0026#34;itensor/all.h\u0026#34; #include \u0026#34;itensor/util/print_macro.h\u0026#34; using namespace itensor; using std::vector; int main(){ int N = 50;//定义一个包含50个1/2自旋的系统\u0026#39;sites\u0026#39; auto sites = SpinHalf(N,{\u0026#34;ConserveQNs=\u0026#34;,false});//\u0026#34;ConserveQNs=\u0026#34;设为false,表示不考虑量子数守恒. // TODO // 3. Adjust the external field to see how the // magnetization changes Real h = 0.5; //调整h来找到相变点.h = 1 时,系统从磁性相变无序相. // Create the MPO for the transverse field // Ising model auto ampo = AutoMPO(sites); //创建一个自动构造MPO的对象\u0026#39;ampo\u0026#39; //依次赋值 for(int j = 1; j \u0026lt; N; ++j){ ampo += -4.0,\u0026#34;Sz\u0026#34;,j,\u0026#34;Sz\u0026#34;,j+1; } for(int j = 1; j \u0026lt;= N; ++j){ ampo += -2*h,\u0026#34;Sx\u0026#34;,j; } //哈密顿量的类型是MPO, 利用toMPO()函数将ampo里蕴含的信息转化为哈密顿量 auto H = toMPO(ampo); // Create a random starting state // For DMRG //随机生成一个初始态 auto psi0 = randomMPS(sites); // Run DMRG to get the ground state auto sweeps = Sweeps(5); //设置密度矩阵重整化群算法(DMRG)的最大迭代次数 sweeps.maxdim() = 5,10,20; //设置密度矩阵重整化群算法(DMRG)的最大纠缠矩阵维度的序列 sweeps.cutoff() = 1E-10; //设置奇异值的截断精度, 只有大于该值的奇异值才会被保留 auto [E,psi] = dmrg(H,psi0,sweeps,{\u0026#34;Quiet\u0026#34;,true}); //H为系统的哈密顿量, 以psi0作为迭代起点运行算法, //\u0026#39;sweeps\u0026#39;是迭代的参数, //\u0026#39;{\u0026#34;Quiet\u0026#34;,true}\u0026#39;表示静默运行(不输出详细的迭代信息) //返回值为基态能量和基态波函数, 以量 E 和 psi 对计算结果进行存储 //在终端查看基态能量值 printfln(\u0026#34;Ground state energy = \u0026#34;,E); // 对psi进行共轭转置. 此时psidag上标级别为2. auto psidag = dag(prime(psi)); // A vector holding the operators used // in the expectation value. // All set to identity operators to start. // Note: this is one-indexed // (O[n] is the operator on site n) //创建长为N+1的向量, 用于存储测量算符.O[j]代表在第j个量子位上的测量算符 auto O = vector\u0026lt;ITensor\u0026gt;(N+1); //对O进行初始化,方法是将所有的测量算符都设为单位算符 for(auto j : range1(N)){ O[j] = op(sites,\u0026#34;Id\u0026#34;,j); //\u0026#34;Id\u0026#34;意指\u0026#34;Identity\u0026#34;, 即单位算符 } // Position we will place our operator // 将本征位置选为正中, 即N/2.以这个位置来执行测量 int Npos = N/2; // TODO // 1. Add an operator to measure the magnetization // in the z direction at Npos. // HINT: use the op(...) function. // It provides spin operators \u0026#34;Sx\u0026#34;, \u0026#34;Sy\u0026#34;, \u0026#34;Sz\u0026#34;, // you may want to scale your operator // to make it a Pauli matrix auto op_z = 2.0 * op(sites,\u0026#34;Sz\u0026#34;,Npos); O[Npos] = op_z; // TODO // 2. Complete the following code // to measure the magnetization. // Print your results with PrintData(...) auto o = psidag(1) * O[1] * psi(1); for(auto j : range1(2,N)){ o *= psidag(j) * O[j] * psi(j); } PrintData(o); // TODO // 3. Adjust the transverse field h at the top of the // file to find the critical point. // HINT: think about the field limits h -\u0026gt; 0 // and h -\u0026gt; infinity return 0; } 编译执行后终端输出：\nvN Entropy at center bond b=25 = 0.002062540436 Eigs at center bond b=25: 0.9998 Largest link dim during sweep 1/5 was 4 Largest truncation error: 4.11222e-11 Energy after sweep 1/5 is -51.205898332822 Sweep 1/5 CPU time = 0.0146s (Wall time = 0.0177s) vN Entropy at center bond b=25 = 0.006828488484 Eigs at center bond b=25: 0.9992 Largest link dim during sweep 2/5 was 10 Largest truncation error: 1.88078e-08 Energy after sweep 2/5 is -51.298393038956 Sweep 2/5 CPU time = 0.0181s (Wall time = 0.0181s) vN Entropy at center bond b=25 = 0.002920154202 Eigs at center bond b=25: 0.9997 Largest link dim during sweep 3/5 was 18 Largest truncation error: 9.69913e-11 Energy after sweep 3/5 is -52.306536772989 Sweep 3/5 CPU time = 0.0210s (Wall time = 0.0210s) vN Entropy at center bond b=25 = 0.002920148259 Eigs at center bond b=25: 0.9997 Largest link dim during sweep 4/5 was 6 Largest truncation error: 9.45633e-11 Energy after sweep 4/5 is -52.306549436787 Sweep 4/5 CPU time = 0.0179s (Wall time = 0.0180s) vN Entropy at center bond b=25 = 0.002920145615 Eigs at center bond b=25: 0.9997 Largest link dim during sweep 5/5 was 5 Largest truncation error: 9.18628e-11 Energy after sweep 5/5 is -52.306549436806 Sweep 5/5 CPU time = 0.0168s (Wall time = 0.0168s) Ground state energy = -52.3065 o = ITensor ord=0: {norm=0.96 (Dense Real)} -0.964679 \u0026ldquo;小车\u0026rdquo; Trotter – Suzuki formula 上一章中我们测量的是单个量子位的期望值, 当我们增加有效算子(指在该量子位上并非单位算符\u0026quot;Id\u0026quot;)的数量, 张量网络看上去就如同小车一般.\n上述语句均为强行解释.事实上这个算法来源于模拟哈密顿量动力学中的Trotter – Suzuki formula, Trotter到底是形容\u0026quot;小车\u0026quot;还是人名实际上并不太清楚.\n现在我们设想一个已经对于相邻的两个量子位的左/右都已经完成左/右规范化,那么现在要做的就是计算这两个相邻量子位上对应算符的期望值.\n和前面章节中处理二量子位的纠缠态类似, 我们可以将这两个量子位进行合并, 进行SVD分解, 再重组(至于是AD组合还是DB组合,可以根据自己需求来调整).\n注意: 这种算法仅适用于相邻量子位并不属于同一方向规范的情况(比如并不是两个正则位置, 而是在正则位置的同一边), 否则以截断SVD方法计算得到的结果并非全局最优.\nTrotter算法的精髓在于,将哈密顿量(也就是我们所用的算子)分解为若干个可以独立演化的小块, 而且如果哈密顿量是短程相互作用, 那么这种分解的效果就更好. 对于长程作用的哈密顿量Trotter算法的效率就会明显降低.在上面我们所举的例子里, 有效的哈密顿量仅涉及两个相邻的量子位, 可以说是符合短程的定义.\n如果哈密顿量中的相互作用都是短程的, 我们可以将哈密顿量分解为小块, 用自旋系统为例, 我们可以用这样的方程来描述:\n$$ \\begin{equation} \\hat{H}=\\hat{H_1}+\\hat{H_2}+\\hat{H_3}+\\dots \\\\ =\\sum_{j}\\hat{S_{j}}\\cdot\\hat{S_{j+1}} \\\\ =(\\hat{S_{1}}\\cdot\\hat{S_{2}})+(\\hat{S_{2}}\\cdot\\hat{S_{3}})+(\\hat{S_{3}}\\cdot\\hat{S_{4}})\\dots \\end{equation} $$\n那么假设系统演化了一极短的虚时间 $\\tau$,我们可以将系统的演化写作:\n$$ \\begin{aligned} e^{-\\tau\\hat{H}}\\approxeq \u0026amp;e^{-\\tau\\hat{H_1}/2}e^{-\\tau\\hat{H_2}/2}e^{-\\tau\\hat{H}_3/2}\\dots\\ \u0026amp;\\dots e^{-\\tau\\hat{H}_3/2}e^{-\\tau\\hat{H_2}/2}e^{-\\tau\\hat{H_1}/2}+O(\\tau^3) \\end{aligned} $$\n虚时演化\n对于一个一般的表达式 $|\\psi\u0026rsquo;\\rangle=e^{-\\tau\\hat{H}}|\\psi\\rangle$ (省略了 $\\hbar$ ),有两种情况:\n$\\tau$ 是实数, 那么相当于 $\\tau = i\\tau\u0026rsquo;$, 其中 $\\tau\u0026rsquo;$是虚时间. 那么我们只要执行足够多步, 就可以搜索到基态. $\\tau$ 是虚数, 那么就是一般的动力学表述, 相当于 $\\tau = it$, 原方程变为 $|\\psi\u0026rsquo;\\rangle=e^{-it\\hat{H}}|\\psi\\rangle$ 对于第一种情况, 有一种应用的例子, 即通过取 $\\beta/2=1/(2T)$ 的虚时演化来模拟有限温度.\n更详细的说, 就是取 $\\tau = \\frac{1}{k_BT}$ ,就相当于进行了一次虚时间演化. 在每一步执行完成后我们要对系统的状态进行记录, 从而对系统的在温度T下的性质进行统计平均.\n我们用.gif来演示这一过程:\n因为我们每一步都只取了每个量子位对应分块哈密顿量的 $\\frac{1}{2}$ ,所以通过往返执行一遍可以不改变纠缠态的规范性.\nQuiz 5 解析 #include \u0026#34;itensor/all.h\u0026#34; #include \u0026#34;itensor/util/print_macro.h\u0026#34; using std::vector; using std::move; using namespace itensor; struct TGate{ int i1 = 0;int i2 = 0; //i1, i2是用来指定虚时演化算子中产生作用的两个自旋量子位编号 ITensor G; //G被声明为ITensor类型，用来存储具体的虚时演化算子值 TGate() { } TGate(int i1_, int i2_, ITensor G_) : i1(i1_), i2(i2_), G(G_) { } }; int main(){ int N = 20; auto sites = SpinHalf(N);//声明系统是20个1/2自旋子的系统 auto init = InitState(sites); for(auto n : range1(N)){ init.set(n, n%2 == 1 ? \u0026#34;Up\u0026#34; : \u0026#34;Dn\u0026#34;); }//并且将该系统初始化为Neel态(相邻自旋总相反) //将该状态init通过MPS()转译为矩阵乘积态(MPS)的形式 auto psi = MPS(init); //定义虚时演化的总时间和时间间隔(步长) Real ttotal = 2;Real tstep = 0.1; //检查时间步长和总时间是否合法 auto nt = int(ttotal/tstep+(1e-9*(ttotal/tstep))); if(std::fabs(nt*tstep-ttotal) \u0026gt; 1E-9){ Error(\u0026#34;Timestep not commensurate with total time\u0026#34;); } //Create Trotter gates (imaginary time) //定义数据类型为TGate的vector容器，用来存储虚时演化算子 auto gates = vector\u0026lt;TGate\u0026gt;{}; for(int b = 1; b \u0026lt; N; ++b){ //从头开始构建哈密顿量 auto hh = op(sites,\u0026#34;Sz\u0026#34;,b)*op(sites,\u0026#34;Sz\u0026#34;,b+1); hh += 0.5*op(sites,\u0026#34;Sp\u0026#34;,b)*op(sites,\u0026#34;Sm\u0026#34;,b+1); hh += 0.5*op(sites,\u0026#34;Sm\u0026#34;,b)*op(sites,\u0026#34;Sp\u0026#34;,b+1); //计算半步长的虚时演化算子 auto G = expHermitian(hh,-tstep/2.); //将虚时演化算子存储到名为gates的容器中(序列尾部) //b在每个循环中都有一个值. 下面的b和b+1是指应用算子的位置. gates.emplace_back(b,b+1,move(G)); } for(int b = N-1; b \u0026gt;= 1; --b){ //从尾开始构建哈密顿量 ITensor hh = op(sites,\u0026#34;Sz\u0026#34;,b)*op(sites,\u0026#34;Sz\u0026#34;,b+1); hh += 0.5*op(sites,\u0026#34;Sp\u0026#34;,b)*op(sites,\u0026#34;Sm\u0026#34;,b+1); hh += 0.5*op(sites,\u0026#34;Sm\u0026#34;,b)*op(sites,\u0026#34;Sp\u0026#34;,b+1); //计算半步长的虚时演化算子 auto G = expHermitian(hh,-tstep/2.); //将虚时演化算子存储到名为gates的容器中(序列尾部) //b在每个循环中都有一个值. 下面的b和b+1是指应用算子的位置. gates.emplace_back(b,b+1,move(G)); } for(int step = 1; step \u0026lt;= nt; ++step){ //将之前计算存储好的分块算子一一取出 for(auto\u0026amp; gate : gates){ //读取分块算子对应的作用位置 auto b = gate.i1; //读取分块算子的具体值 auto\u0026amp; G = gate.G; //设置正则位置为当前循环中的b psi.position(b); //将相邻量子位b和b+1合成为新张量AA auto AA = psi(b) * psi(b+1); // TODO: ADD CODE here that applies // the gate G to the MPS bond // tensor \u0026#34;AA\u0026#34; by multiplying // G and AA using the * operator // G is an ITensor // with index structure: // s_{b}\u0026#39; s_{b+1}\u0026#39; // | | // ======== // | | // s_{b} s_{b+1} // After applying G to AA, don\u0026#39;t forget // to reset the prime level to 0 by using // the noPrime method. //将G和AA相乘 AA *= G; AA.noPrime();//将AA的上标级别降为0, 因为SVD操作要求上标级别是一致的 //Normalize AA after applying G AA /= norm(AA); //SVD AA to restore MPS form auto [U,D,V] = svd(AA,inds(psi(b)),{\u0026#34;Cutoff\u0026#34;,1E-10}); psi.set(b,U); psi.set(b+1,D*V); } printfln(\u0026#34;Step %d/%d\u0026#34;,step,nt); } //Make Heisenberg H to //conveniently measure energy auto ampo = AutoMPO(sites); for(auto j : range1(N-1)){ ampo += 0.5,\u0026#34;S+\u0026#34;,j,\u0026#34;S-\u0026#34;,j+1; ampo += 0.5,\u0026#34;S-\u0026#34;,j,\u0026#34;S+\u0026#34;,j+1; ampo += \u0026#34;Sz\u0026#34;,j,\u0026#34;Sz\u0026#34;,j+1; } auto H = toMPO(ampo); printfln(\u0026#34;Energy = %.20f\u0026#34;,inner(psi,H,psi)); // Exact ground state energy of N=20 // Heisenberg model:E0 = -8.6824733306 return 0; } 编译执行后, 在终端输出的结果:\nStep 1/20 Step 2/20 Step 3/20 Step 4/20 Step 5/20 Step 6/20 Step 7/20 Step 8/20 Step 9/20 Step 10/20 Step 11/20 Step 12/20 Step 13/20 Step 14/20 Step 15/20 Step 16/20 Step 17/20 Step 18/20 Step 19/20 Step 20/20 Energy = -8.51422469470028886462 最后的结果和理论上计算得到的 $-8.6824733306$ 相差约为 $1.94%$, 可以说差距不大.\n矩阵乘积算子 MPO 我们已经知道, 在张量网络中, 一个哈密顿量 $\\hat{H}$ 看上去大概是这个样子:\n$$ \\sum_{|}^{|}\\sum_{|}^{|}\\sum_{|}^{|}\\sum_{|}^{|}\\sum_{|}^{|} $$\n而一个对应量子位数的纠缠态波函数 $|\\Psi\\rangle$ 则是这样:\n$$ \\sum^{|}-\\sum^{|}-\\sum^{|}-\\sum^{|}-\\sum^{|} $$\n在上面的学习中我们已经知道, 要让 $\\hat{H}$ 作用到 $|\\Psi\\rangle$ 上, 其实就是将上下标进行结合的过程.\n那么既然 $|\\Psi\\rangle$ 能够写作矩阵乘积的形式, 我们自然也可以对 $\\hat{H}$ 进行同样的要求,将其化为张量网络中的这种形式:\n$$ \\sum_{|}^{|}-\\sum_{|}^{|}-\\sum_{|}^{|}-\\sum_{|}^{|}-\\sum_{|}^{|} $$\n我们取其中一个张量进行分析:\n$$ ^{1}-\\sum_{|_{4}}^{|^{3}}-^{2} $$\n这里面的$1$和$2$代表的时张量左右的指标, 而$3$和$4$代表的是张量上下的指标(通常和作用与某量子位或其它物理量有关). 多个这样的张量乘在一起就能化成矩阵乘积算子的形式.\n我们不妨用一个更具体的例子:\n$$\\hat{H} = \\begin{bmatrix} 0 \u0026amp; 1\\\\ \\end{bmatrix}_{A} \\begin{bmatrix} \\hat{I} \u0026amp; \\\\ \\hat{\\sigma}^{z} \u0026amp; \\hat{I}\\\\ \\end{bmatrix}_{B} \\begin{bmatrix} \\hat{I} \u0026amp; \\\\ \\hat{\\sigma}^{z} \u0026amp; \\hat{I}\\\\ \\end{bmatrix}_{C} \\begin{bmatrix} 1 \\\\ 0\\\\ \\end{bmatrix}_{D} $$\n在矩阵的右下角使用A B C D来进行标记.它们以张量网络画出的形式大概像这样:\n$$ \\sum{A}-\\sum_{|}^{|}{B}-\\sum_{|}^{|}{C}-\\sum{D} $$\n不难看出实际上A和B,以及C和D是能够各自结合形成新矩阵的, 我们写出相乘得到的结果:\n$$ \\hat{H} = \\begin{bmatrix} \\hat{\\sigma}^{z} \u0026amp; \\hat{I}\\\\ \\end{bmatrix}_{A\u0026rsquo;} \\begin{bmatrix} \\hat{I}\\\\ \\hat{\\sigma}^{z} \\\\ \\end{bmatrix}_{B\u0026rsquo;} $$\n在方程上我们这样表述:\n$$ \\hat{H} = \\hat{\\sigma_{1}}^{z}\\bigotimes\\hat{I_{2}} + \\hat{I_{1}}\\bigotimes\\hat{\\sigma_{2}}^{z} $$\n当然这一个式子我们还可以进行继续的简化, 完成最后一步的乘法:\n$$ \\hat{H} = \\hat{\\sigma_{1}}^{z}+\\hat{\\sigma_{2}}^{z} =\\sum_{i}\\hat{\\sigma_{i}}^{z} $$\n现在再动手算更复杂的例子.\n$$\\hat{H}= \\begin{bmatrix} 0 \u0026amp; 0 \u0026amp; 1\\\\ \\end{bmatrix} \\begin{bmatrix} \\hat{I} \u0026amp; \u0026amp; \\\\ \\hat{\\sigma}^{z} \u0026amp; \u0026amp; \\\\ -h\\hat{\\sigma}^{x} \u0026amp; \\hat{\\sigma}^{z} \u0026amp; \\hat{I}\\\\ \\end{bmatrix} \\begin{bmatrix} \\hat{I} \u0026amp; \u0026amp; \\\\ \\hat{\\sigma}^{z} \u0026amp; \u0026amp; \\\\ -h\\hat{\\sigma}^{x} \u0026amp; \\hat{\\sigma}^{z} \u0026amp; \\hat{I}\\\\ \\end{bmatrix} \\begin{bmatrix} 1\\\\ 0\\\\ 0\\\\ \\end{bmatrix} $$\n先算两边, 再算中间, 即有\n$$ \\hat{H}=[-h\\hat{\\sigma}^{x},\\hat{\\sigma}^{z},\\hat{I}][\\hat{I},\\hat{\\sigma}^{z},-h\\hat{\\sigma}^{x}]^{T}=\\sum_{j}\\hat{\\sigma_{j}}^{z}\\hat{\\sigma_{j+1}}^{z}-h\\hat{\\sigma_{j}}^{x} $$\n本章没有对应的Quiz\nDMRG 密度矩阵重整化群 警告\n以下部分内容, 可能仅适用于1D的情况, 虽然ITensor开发了一些基于基于DMRG算法的扩展用以应对二维情况下系统, 但是这些方法的实现复杂度通常较高, 需要较长的计算时间和更高的计算资源.\n如果你想要对二维系统进行计算, 请考虑使用PEPS(投影纠缠对态算法)或者MERA(Multi-scale Entanglement Renormalization Ansatz,多尺度嵌套正交模型)算法, 除了ITensor外你也可以考虑使用Qiskit, PyQuante等计算库, 从而实现基于哈密顿量对角化的能带计算.\n所以为什么要学ITensor呢? 直接用matlab模拟不就好了\n如果我们想要求解一维哈密顿量的基态, DMRG 将是最好的方法.\n方程式的形式如下:\n$\\hat{H}|\\Psi\\rangle = E|\\Psi\\rangle$\n其中 $\\hat{H}$ 和 $|\\Psi\\rangle$ 都化为对应量子位数的 矩阵乘积形式(MPO 和 MPS).\nMPS的构造中不只是用到了我们之前所学的SVD和ReGroup, 它还包括了一些我们没有提到的处理操作, 这些操作被统称为\u0026quot;规范化变换\u0026quot;, 比如对张量进行单位化(unitarization).\n这些处理是为了MPS在计算时具有良好性质, 比如计算物理量时具有最小误差.\nImporttant: MPS should be in definite gauge. I.e.most tensors unitary.\n就是在要求矩阵乘积态应当已经被规范化, 也就是大多数量子位的张量都是幺正的.\n幺正 Unitary\n幺正本身是一个线性代数里的概念, 在这里我们用更物理一些的语言来描述这个性质.\n如果一个算子 $\\hat{U}$ , 还有一个态矢量 $|\\psi\\rangle$ ,能够满足以下条件:\n$\\hat{U}|\\psi\\rangle\\neq 0$; $||\\hat{U}|\\psi\\rangle|| = ||\\psi\\rangle||$; $\\langle\\Phi|\\hat{U}|\\psi\\rangle = \\langle\\Phi|\\psi\\rangle$ 其中 $||\\psi\\rangle||$ 代表态势 $|\\psi\\rangle$ 的长度, 这个量可以通过求内积来得到. 那么我们就可以称这个算子是幺正的. 所以我们可以选定一个特定的位置(正则位置), 将其左右两边的张量全部都规范化处理, 从而定义出正交归一的基.\n这样, 我们就可以计算出期望值 $\\langle\\Psi|\\hat{H}|\\Psi\\rangle$ .其中 $|\\Psi\\rangle$ 和 $\\hat{H}$ 都是矩阵乘积形式. 按照我们前面所说的,\nMERA算法 Multi-scale Entanglement Renormalization Ansatz\n多尺度嵌套正交矩形模型. 这是对重整化群方法的扩展. MERA将系统分解为一系列的张量, 每个张量代表了系统不同尺度下的状态. 每个张量的大小表示该尺度的自由度数目.\n这些张量通过特定的变化相互连接, 从而形成具有分形结构的网络. 这样, 我们就可以将系统的纠缠结构表示为不同尺度上的简单张量网络.\n具体来说, 每个张量被分为两个部分, 即上部分和下部分. 上部分表示的是低尺度的信息, 下部分表示的是高尺度的信息. 通过重复应用加密和解密操作, 就可以得到不同尺度下的系统状态.\n","permalink":"https://Muatyz.github.io/posts/phy/itensor-mannual/","summary":"one site 单节点 Site 意指\u0026quot;节点\u0026quot;. 单节点的自旋为 $\\frac{1}{2}$ 的波函数,有两个基底. $|s=1\\rangle=|\\uparrow\\rangle;|s=2\\rangle=|\\downarrow\\rangle$ 对于一般的自旋为 $\\frac{1}{2}$ 的波函数,可以写成如下形式: $|\\psi\\rangle=\\sum_{s=1}^{2}\\psi_s|s\\rangle(\\psi_s\\in\\mathcal{C})$ 使用张量数学来处理这个单节点波函数, 即 $|\\psi_s\\rangle$ 对应一个有一个\u0026quot;触手\u0026quot;的结点.展开形式为 $(^{\\psi_1}_{\\psi_2})$ , $\\psi_1,\\psi_2$ 又各自是一个单\u0026quot;触手\u0026quot","title":"ITensor基础语法说明"},{"content":"在某文件夹下创建ITensor文件夹。在该文件夹内执行\ngit clone https://github.com/ITensor/ITensor itensor 得到以itensor命名的编译源文件。这个文件夹名字可以自己改。\n前置：安装lapack和blas依赖库. sudo apt-get update sudo apt-get install libblas-dev liblapack-dev 检验是否正确安装:\ndpkg -L libblas-dev dpkg -L liblapack-dev 若能弹出对应路径说明安装成功。在这里留心安装的具体路径, 之后设置BLAS_LAPACK_LIBFLAGS可能会用到\n在终端执行\ncd itensor 进入下载的库文件所在的文件夹.\ncp options.mk.sample options.mk 将示例mk文件另存为mk文件.并且执行\nsudo nano options.mk 以nano编辑器打开配置文件。配置文件里默认的平台是MacOS，我们用的是WSL2,所以将\nPLATFORM=macos BLAS_LAPACK_LIBFLAGS=-framework Accelerate 这两行注释掉，而将下面的\n#PLATFORM=lapack #BLAS_LAPACK_LIBFLAGS=-lpthread -L/usr/lib -lblas -llapack 取消注释。注意看自己的BLAS_LAPACK_LIBFLAGS是否需要修改.比如我的就应该是-L/usr/lib/x86_64-linux-gnu.ctrl+O，ENTER保存。ctrl+X退出。\n依然是在itensor目录下，在bash终端执行\nmake 等待终端执行完成。\n为了能够在ITensor源文件所在文件夹以外的路径使用Itensor, 应该遵循以下步骤。\n将itensor/tutorial/project_template下的所有文件(Makefile,myappname.cc,myclass.h,当然说明书README.md无关紧要)复制粘贴到含有main函数代码的cpp文件所在的文件夹中;\n修改LIBRARY_DIR.这个路径和options.mk所在的文件夹的路径是相同的.(如果有/mnt/e/wsl/ubuntu2204/cpp/itensorCalculation/ITensor/itensor/options.mk,那么就将\nLIBRARY_DIR=$(HOME)/itensor 改写为\nLIBRARY_DIR=/mnt/e/wsl/ubuntu2204/cpp/itensorCalculation/ITensor/itensor 即可;\n修改APPNAME.这个是你的程序的名字.我给自己的程序源文件主程序起名为ctnmodel.cc, 所以 APP=myappname 改为\nAPP=ctnmodel 增加依赖库.模板里的myclass.h是用来测试的,在实际过程中可以替换为自己的头文件;\n编译的源文件名字,只要完成了APP的修改就无需改动.\n然后在bash终端执行\nmake 编译出执行文件.\n注意\n示例的Makefile并没有添加可执行权限，如果你想在bash终端中进行执行，那么你可以\nchmod +x ctnmodel (ctnmodel换成你自己程序的名字)\n或者直接在你的Makefile里面找到build和debug的行， 然后分别添加\nchmod +x $(APP) 和\nchmod +x $(APP)-g 最后形成这样的表达：\nbuild: $(APP) #这一行是为了添加可执行权限，如果你不需要，可以将其注释掉 chmod +x $(APP) debug: $(APP)-g #同上 chmod +x $(APP)-g 你可以通过在终端执行\n./ctnmodel (ctnmodel换成你的程序的名字)来完成程序的执行.这些模板都是由Makefile来进行管理的,所以对于vscode的编译执行功能没有得到充分发挥.\n待续:vscode的配置.\n","permalink":"https://Muatyz.github.io/posts/phy/itensor-donwload/","summary":"在某文件夹下创建ITensor文件夹。在该文件夹内执行 git clone https://github.com/ITensor/ITensor itensor 得到以itensor命名的编译源文件。这个文件夹名字可以自己改。 前置：安装lapack和blas依赖库. sudo apt-get update sudo apt-get install libblas-dev liblapack-dev 检验是否正确安装: dpkg -L libblas-dev dpkg -L liblapack-dev 若能弹出对应路径说明安装成功。在这里留心安装的具体路径, 之后设置BL","title":"ITensor库安装说明"},{"content":"内容总结于:\n转角石墨烯的实验研究.胡皓东.2022.上海交通大学 氢元素低维纳米结构制备及近场光学表征.吕博赛.2022.上海交通大学 Moiré bands in twisted double-layer graphene.Rafi Bistritzer and Allan H. MacDonald.2011. PNAS 单层石墨烯 晶格 对于单层石墨烯而言, 晶格基矢可以写作\n$$ \\begin{equation} \\vec{a}_{1} = \\frac{a}{2}(3, \\sqrt{3}),\\vec{a}_{2} = \\frac{a}{2}(3,-\\sqrt{3}). \\end{equation} $$\n$a \\approx 1.42 \\overset{\\circ}{A}$ 为碳碳键长度.\n根据倒格矢公式可以计算出倒格基矢\n$$ \\begin{equation} \\vec{b_1} = \\frac{2 \\pi}{3a} ( 1, \\sqrt{3} ), \\vec{b_2} = \\frac{2 \\pi}{3a} ( 1, -\\sqrt{3}). \\end{equation} $$\n而三个最近邻矢量则是\n$$ \\begin{equation} \\delta_{1} = \\frac{a}{2}(1, \\sqrt{3}), \\delta_{2} = \\frac{a}{2}(1, -\\sqrt{3}), \\delta_{3} = a( -1, 0 ) \\end{equation} $$\n用图示来表达这些矢量:\n狄拉克锥即位于$K,K\u0026rsquo;$点.\n在后文中所用到的倒格矢 $\\vec{G_1}, \\vec{G_2}$ 即可从该处导出.\n当我们对倒格矢指标求和从而采取截断时, 我们的方法是采用 $\\vec{0}, \\mathcal{G}^{(2)}, \\mathcal{G}^{(3)}$, 它们对应的是\n虚线圈出的范围是指的旋转前的单层石墨烯的第一布里渊区.\n$\\vec{0}, \\mathcal{G}^{(2)}, \\mathcal{G}^{(3)}$ 连接的是三个等效的狄拉克点. 蓝色圆点表示的是旋转后的上下两层石墨烯的狄拉克点.\n紧束缚模型 只考虑最近邻跃迁,即三个最近邻矢量, 可以写出对应的哈密顿量:\n$$ \\begin{equation} \\hat{H} = t\\sum_{i,j = \\langle i\\rangle}a_{i}^{\\dagger}b_{j} + h.c.. \\end{equation} $$\n$t\\approx 2.7 eV$ 为跃迁系数(最近邻跃迁能量), $a_{i}^{\\dagger}$ 为在 $i$ 位置产生一个电子的产生算符, $b_{j}$ 为在 $j$ 位置湮灭一个电子的湮灭算符.\n使用傅里叶变换将升降算符写成动量空间的形式:\n$$ \\begin{equation} a_{i} = \\sum_{\\vec{k}}e^{i\\vec{k}\\cdot\\vec{r_{i, A}}}a_{\\vec{k}}, \\end{equation} $$\n$$ \\begin{equation} b_{i} = \\sum_{\\vec{k}}e^{i\\vec{k}\\cdot\\vec{r_{i, B}}}b_{\\vec{k}}. \\end{equation} $$\n将上式代入到哈密顿量的式子中, 即有\n$$ \\begin{equation} \\hat{H} = \\sum_{\\vec{k}}h(\\vec{k})=t\\sum_{\\vec{k}}f(\\vec{k})a_{\\vec{k}}^{\\dagger}b_{\\vec{k}} + h.c.. \\end{equation} $$\n$f(\\vec{k}) = e^{i\\vec{k}\\cdot\\delta_{1}} + e^{i\\vec{k}\\cdot\\delta_{2}} + e^{i\\vec{k}\\cdot\\delta_{3}} = \\sum_{i = 1}^{3}e^{i\\vec{k}\\cdot\\delta_{i}}$.\n对这个哈密顿量求本征值, 即有本征能量为\n$$ \\begin{equation} E_{\\pm}(\\vec{k}) = \\pm t|f(\\vec{k})| = \\pm t\\sqrt{3 + 2\\cos\\left(\\sqrt{3}k_{x}a\\right) + 4\\cos\\left(\\frac{\\sqrt{3}}{2}k_{x}a\\right)\\cos\\left(\\frac{3}{2}k_{y}a\\right)} \\end{equation} $$\n超晶格-转角双层石墨烯 Commensuration (共格, 相称) 要产生共格现象, 就需要摩尔超晶格的原胞基矢能够由整数个原晶格基矢组成.\n用公式描述即有\n$$ \\begin{equation} \\vec{A}_{1} = n\\vec{a}_1 + m\\vec{a}_2, \\end{equation} $$\n$$ \\begin{equation} \\vec{A}_{2} = -m\\vec{a}_1 + (n + m)\\vec{a}_2 \\end{equation} $$\n在一个摩尔超晶格中往往会含有上千个原子, 大大超过了密度泛函理论的运算上限, 所以需要使用近似方法.\n紧束缚模型 因为层间距离 $\\approx 0.3 nm$, 大于碳碳键长度 $a \\approx 0.14 nm$, 所以不考虑层间杂化.\n写出紧束缚哈密顿量:\n$$ \\begin{equation} \\hat{H} = \\sum_{i,j}\\omega(i,j)c_{i}^{\\dagger}c_{j} + h.c. \\end{equation} $$\n$i,j$ 是原胞中的原子指标, $c_{i}^{\\dagger}$ 为在 $i$ 位置产生一个电子的产生算符, $c_{j}$ 为在 $j$ 位置湮灭一个电子的湮灭算符, $\\omega(i,j)$ 为跃迁参数.\n描述跃迁参数的公式是这样的:\n$$ \\begin{equation} \\omega(i,j) = V_{\\pi}[1-(\\frac{\\vec{d_{ij}}\\cdot\\hat{z}}{d_{ij}})^2]e^{-\\frac{d_{ij}-a_{0}}{\\delta}} + V_{\\sigma}(\\frac{\\vec{d_{ij}}\\cdot\\hat{z}}{d_{ij}})e^{-\\frac{d_{ij}-d_{0}}{\\delta}} \\end{equation} $$\n$\\vec{d_{ij}} = \\vec{r_{i}} - \\vec{r_{j}}$ 是原子间位移矢量. 而 $V_{\\pi} = -2.7 eV$ 为 $\\pi$ 键的跃迁参数, $V_{\\sigma} = 0.48 eV$ 为 $\\sigma$ 键的跃迁参数, $a_{0} = 0.142 nm$ 为碳碳键长度, $d_{0} = 0.335 nm$ 为层间距离, $\\delta = 0.045 nm$ 为衰减长度.\n和单层石墨烯中的计算处理一样, 我们需要将这里的升降算符通过傅里叶变换写成动量空间的形式:\n$$ \\begin{equation} c_{i} = \\sum_{\\vec{k}}e^{i\\vec{k}\\cdot(\\vec{r_{i}} + \\vec{R})}c_{\\vec{k}}^{I} \\end{equation} $$\n$\\vec{R}$ 是包含第i个原子的原胞的原点绝对位置, $\\vec{r}_{i}$ 则是相对于原胞内原点的相对位移, $I = 1,\\dots,N$ 则是指的原胞内第 $i$ 个原子.\n代入后得到哈密顿量的动量形式:\n$$ \\begin{equation} \\hat{H} = \\sum_{\\vec{k}}h(\\vec{k}) = \\sum_{\\vec{k}}\\sum_{I,J}h_{IJ}(\\vec{k})c_{\\vec{k}}^{I,\\dagger}c_{\\vec{k}}^{J} + h.c.. \\end{equation} $$\n$h_{IJ}(\\vec{k}) = \\sum_{\\vec{R}}\\omega(\\vec{r_{I}}+\\vec{R},\\vec{r_{J}})e^{i\\vec{k}\\cdot(\\vec{r_{I}}+\\vec{R}-\\vec{r_{J}})}$ 为跃迁矩阵.\n然而, 对于 $N \\approx 10^4$ 的数据规模进行对角化是十分困难的.\n$N \\approx 10^4$ 这个数字来源于这样的计算:摩尔超晶格原胞面积变为原先的 $\\theta^{-2}$ 倍, 则其中的原子数量也增长了 $\\theta^{-2}$ 倍, 所以对于 $\\theta \\approx 1°$ 的TBG, 超晶格的原胞大约存在 $10^{4}$ 个原子.\n未给出具体计算方法\n紧束缚模型可以准确给出能带结构, 但是其角度是从原子和原子之间的相互作用出发的, 而并不能和摩尔超晶格联系起来.\n连续模型 在低能条件下, 连续模型不仅适用于共格的摩尔超晶体, 也同样适用于并无共格性的叠加晶体.\n建立这样一个哈密顿量, 其中主对角线上的元素是单层石墨烯的狄拉克哈密顿量, 而副对角线上的元素则是描述层间跃迁的隧穿项.\n对于单层的石墨烯, 其狄拉克哈密顿量是这样表示的:\n$$ \\begin{equation} h_{\\vec{K}}(\\vec{q})=\\hbar v_{F}|\\vec{q}| \\begin{bmatrix} 0 \u0026amp; e^{-i\\theta_{\\vec{q}}} \\\\ e^{i\\theta_{\\vec{q}}} \u0026amp; 0 \\\\ \\end{bmatrix} \\end{equation} $$\n$\\theta_{\\vec{q}} = \\tan^{-1}(q_{y}/q_{x})$\n所以对于相对转角为 $\\theta$ 的双层石墨烯, 其单层的狄拉克哈密顿量可以分别写作:\n$$ \\begin{equation} h_{\\vec{K}}^{1}(\\vec{q})=\\hbar v_{F}|\\vec{q}| \\begin{bmatrix} 0 \u0026amp; e^{-i(\\theta_{\\vec{q}}+\\theta/2)} \\\\ e^{i(\\theta_{\\vec{q}}+\\theta/2)} \u0026amp; 0 \\\\ \\end{bmatrix} =\\hbar v_{F}\\sigma^{\\theta/2}\\cdot\\vec{q}, \\end{equation} $$\n$$ \\begin{equation} h_{\\vec{K}}^{2}(\\vec{q})=\\hbar v_{F}|\\vec{q}| \\begin{bmatrix} 0 \u0026amp; e^{-i(\\theta_{\\vec{q}}-\\theta/2)} \\\\ e^{i(\\theta_{\\vec{q}}-\\theta/2)} \u0026amp; 0 \\\\ \\end{bmatrix} =\\hbar v_{F}\\sigma^{-\\theta/2}\\cdot\\vec{q}. \\end{equation} $$\n它们各自作用在单层石墨烯的 $A$, $B$ 子格上, 所以对于整体的哈密顿量而言, 是作用在 $\\begin{bmatrix} \\alpha_{\\vec{q}} \\ \\beta_{\\vec{q}} \\ \\end{bmatrix}$ 这样一个两分量的旋量上的.\n接下来要解决的时层间隧穿项. 我们将层间跃迁的矩阵元写出来:\n$$ \\begin{equation} T_{\\vec{k}\\vec{p}\u0026rsquo;}^{\\alpha\\beta} = \\langle \\Psi_{\\vec{k}\\alpha}^{(1)}|\\hat{H_{T}}|\\Psi_{\\vec{p}\u0026rsquo;\\beta}^{(2)}\\rangle \\end{equation} $$\n该矩阵元描述的是一个动量为 $\\vec{p}\u0026rsquo;=M(\\theta)\\vec{p}$ 的电子,在第二层的 $\\beta$ 子格上, 通过层间跃迁到第一层的 $\\alpha$ 子格上, 成为动量为 $\\vec{k}$ 的态的过程, $M(\\theta)$ 是一个旋转矩阵.\n我们用紧束缚模型的思路将波函数的形式写出来:\n$$ \\begin{equation} |\\Psi_{\\vec{k}\\alpha}^{(1)}\\rangle=\\frac{1}{\\sqrt{N}}\\sum_{\\vec{R}}e^{i\\vec{k}\\cdot(\\vec{R}+\\vec{\\tau_{\\alpha}})}|\\vec{R}+\\vec{\\tau_{\\alpha}}\\rangle, \\end{equation} $$\n$$ \\begin{equation} |\\Psi_{\\vec{p}\u0026rsquo;\\beta}^{(2)}\\rangle=\\frac{1}{\\sqrt{N}}\\sum_{\\vec{R\u0026rsquo;}}e^{i\\vec{p}\u0026rsquo;\\cdot(\\vec{R\u0026rsquo;}+\\vec{\\tau_{\\beta}}\u0026rsquo;)}|\\vec{R\u0026rsquo;}+\\vec{\\tau_{\\beta}}\u0026rsquo;\\rangle. \\end{equation} $$\n$\\tau_{A} = 0, \\tau_{B} = \\tau$. $\\vec{R}$ 是对所有三角布拉维格子求和的指标.\n我们不妨选取 $AB$ 堆叠处作为原点, 那么就有关系式\n$$ \\begin{equation} \\vec{R\u0026rsquo;} = M(\\theta)(\\vec{R}-\\tau) + d \\end{equation} $$\n$d$ 是层间间距.\n将波函数代入到层间跃迁矩阵元中, 并且采用两中心近似, 就能得到层间跃迁矩阵元:\n$$ \\begin{equation} T_{\\vec{k}\\vec{p}\u0026rsquo;}^{\\alpha\\beta}=\\frac{1}{N} \\sum_{\\vec{R}}\\sum_{\\vec{R}\u0026rsquo;} e^{i[-\\vec{k}(\\vec{R}+\\tau_{\\alpha})+\\vec{p}\u0026rsquo;(\\vec{R}\u0026rsquo;+\\tau_{\\beta}\u0026rsquo;)]} t(\\vec{R}+\\tau_{\\alpha}-\\vec{R}\u0026rsquo;-\\tau_{\\beta}\u0026rsquo;) \\end{equation} $$\n两中心近似, 指的是假设电子只和起始原子和终止原子之间的原子相互作用, 而忽略了其他原子的影响. 用公式可以这样描述: $$ \\begin{equation} \\langle\\vec{R}+\\tau_{\\alpha}|\\hat{H_T}|\\vec{R\u0026rsquo;}+\\tau_{\\beta}\u0026rsquo;\\rangle = t(\\vec{R}+\\tau_{\\alpha}-\\vec{R}\u0026rsquo;-\\tau_{\\beta}\u0026rsquo;) \\end{equation} $$ 因为转角双层石墨烯中碳碳键很小, 所以这个式子用来描述电子跃迁的过程非常好用.\n利用傅里叶变换, 我们可以将两中心近似所用的式子转为动量空间的形式.\n$$ \\begin{equation} T_{\\vec{k}\\vec{p}\u0026rsquo;}^{\\alpha\\beta}=\\frac{1}{N^2} \\sum_{\\vec{R}}\\sum_{\\vec{R}\u0026rsquo;}\\sum_{\\vec{q_1}}\\sum_{\\vec{q_2}} e^{i[-\\vec{k}(\\vec{R}+\\tau_{\\alpha})+\\vec{p}\u0026rsquo;(\\vec{R}\u0026rsquo;+\\tau_{\\beta}\u0026rsquo;)]} e^{i[\\vec{q_1}(\\vec{R}+\\tau_{\\alpha})-\\vec{q_2}(\\vec{R}\u0026rsquo;+\\tau_{\\beta}\u0026rsquo;)]} \\frac{t_{\\vec{q}}}{\\Omega} \\end{equation} $$\n这个式子非常长, 但是我们可以通过一些和式结论来简化这个式子:\n$$ \\begin{equation} \\sum_{\\vec{R}}e^{i(\\vec{q_1}-\\vec{k})\\vec{R}} = N\\delta_{\\vec{q_1}-\\vec{k}, \\vec{G_1}}, \\end{equation} $$\n$$ \\begin{equation} \\sum_{\\vec{R}\u0026rsquo;}e^{-i(\\vec{q_2}-\\vec{p}\u0026rsquo;)(\\vec{R}\u0026rsquo;-\\vec{d}+\\tau\u0026rsquo;)} = N\\delta_{\\vec{q_2}-\\vec{p}\u0026rsquo;, \\vec{G_2}\u0026rsquo;}. \\end{equation} $$\n最后我们就得到了层间跃迁矩阵元:\n$$ \\begin{equation} T_{\\vec{k}\\vec{p}\u0026rsquo;}^{\\alpha\\beta}=\\sum_{\\vec{G_1}\\vec{G_2}}\\frac{t_{\\overline{\\vec{k}}+\\vec{G_1}}}{\\Omega} e^{i[\\vec{G_1}\\tau_{\\alpha}-\\vec{G_2}(\\tau_{\\beta}-\\tau)-\\vec{G_2}\u0026rsquo;\\vec{d}]}\\delta_{\\overline{\\vec{k}}+\\vec{G_1},\\overline{\\vec{p}}\u0026rsquo;+\\vec{G_2}\u0026rsquo;} \\end{equation} $$\n$\\Omega$ 是原胞面积, $t_{\\vec{q}}$ 是隧穿幅值 $t(\\vec{r})$ 的傅里叶变换, $\\vec{G_1}, \\vec{G_2}$ 是倒格矢, 上标代表 $\\vec{G}_i = M(\\theta)\\vec{G}_i$. 而上划线则表示动量起点是布里渊区的中心.\n对于狄拉克点附近的动量而言, 如果要让 $t_q$ 值足够大, 那么可以对层间矩阵元 $T_{\\vec{k}\\vec{p}\u0026rsquo;}^{\\alpha\\beta}$ 中的 $\\vec{G_1}$指标采取截断, 具体来说就是只保留 $\\vec{0},\\mathcal{G}^{(2)}, \\mathcal{G}^{(3)}$ 三项.\n注意到总有关系式 $$ \\begin{equation} \\overline{\\vec{k}} + \\vec{G_1} = \\overline{\\vec{p}}\u0026rsquo; + \\vec{G_2}' \\end{equation} $$ 成立\n所以当 $\\vec{G_1}$ 被选定, 实际上对应的 $\\vec{G_2}\u0026rsquo;$ 可以被选定(这意味着跃迁发生在一层狄拉克点邻域到另一层狄拉克点邻域).\n再回头看看前面晶格部分内容里展示的\n我们假定, 在低能模型下, 只有 $q_b, q_{tr}, q_{tl}$ 对应的三个跃迁过程有意义. 具体到电子态, 即\n$$ |\\vec{k_{\\alpha}}^{(1)}\\rangle \\rightarrow |(\\vec{k}+\\vec{k_{\\theta}})_{\\beta}^{(2)}\\rangle $$\n$$ |\\vec{k_{\\alpha}}^{(1)}\\rangle \\rightarrow |(\\vec{k}+\\vec{k_{\\theta}}-\\vec{G_1})_{\\beta}^{(2)}\\rangle $$\n$$ |\\vec{k_{\\alpha}}^{(1)}\\rangle \\rightarrow |(\\vec{k}+\\vec{k_{\\theta}}-\\vec{G_2})_{\\beta}^{(2)}\\rangle $$\n$$ |k_{\\theta}| = |\\vec{K} - \\vec{K}\u0026rsquo;| = 2k_{D}\\sin{\\frac{\\theta}{2}} $$\n其对应的跃迁矩阵元中的分量即为\n$$ \\begin{equation} T_{1} = \\frac{t_{k_{D}}}{\\Omega} \\begin{bmatrix} 1 \u0026amp; 1\\\\ 1 \u0026amp; 1\\\\ \\end{bmatrix}, \\end{equation} $$\n$$ \\begin{equation} T_{2} = \\frac{t_{k_{D}}}{\\Omega}e^{-i\\mathcal{G}^{(2)\u0026rsquo;}\\cdot\\vec{d}} \\begin{bmatrix} e^{-i\\Phi} \u0026amp; 1\\\\ e^{i\\Phi} \u0026amp; e^{-i\\Phi}\\\\ \\end{bmatrix}, \\end{equation} $$\n$$ \\begin{equation} T_{3} = \\frac{t_{k_D}}{\\Omega}e^{-i\\mathcal{G}^{(3\u0026rsquo;)}\\cdot\\vec{d}} \\begin{bmatrix} e^{i\\Phi} \u0026amp; 1\\\\ e^{-i\\Phi} \u0026amp; e^{i\\Phi} \\\\ \\end{bmatrix} \\end{equation} $$\n$\\phi = 2\\pi/3$, 该数值来源于 $\\mathcal{G}^{(2)}\\cdot\\tau$\n四个矩阵元分别指代 $AA, AB, BA, BB$ 四种跃迁的子格排布.\n前面我们已经提到, 对于一个超晶格网络上的态 $|(\\vec{k}+m\\vec{G_1}+n\\vec{G_2})^{1}\\rangle$ 对应三个跃迁过程:\n$$ \\begin{equation} |(\\vec{k}+m\\vec{G_1}+n\\vec{G_2})^{(1)}\\rangle\\rightarrow|(\\vec{k}+\\vec{k_{\\theta}}+m\\vec{G_1}+n\\vec{G_2})^{(2)}\\rangle, \\end{equation} $$\n$$ \\begin{equation} |(\\vec{k}+m\\vec{G_1}+n\\vec{G_2})^{(1)}\\rangle\\rightarrow|(\\vec{k}+\\vec{k_{\\theta}}+(m - 1)\\vec{G_1}+n\\vec{G_2})^{(2)}\\rangle, \\end{equation} $$\n$$ \\begin{equation} |(\\vec{k}+m\\vec{G_1}+n\\vec{G_2})^{(1)}\\rangle\\rightarrow|(\\vec{k}+\\vec{k_{\\theta}}+m\\vec{G_1}+(n - 1)\\vec{G_2})^{(2)}\\rangle \\end{equation} $$\n$$ m = -M, \\dots,-1, 0, 1, \\dots, M $$\n$$ n = -N, \\dots,-1, 0, 1, \\dots, N $$\n一般采取 $M = N = 4$ 的截断即可取得理想计算结果.\n使用指标 $\\vec{q}$ 来替换 $\\vec{k}$, 具体来说是\n$$ \\vec{q} = \\vec{k} - \\vec{K} $$\n所以我们就可以定义基底\n$$ \\begin{equation} |q\\rangle= \\begin{bmatrix} |(\\vec{q}-M\\vec{G_1}-N\\vec{G_2})^{(1)}\\rangle\\\\ |(\\vec{q}-(M-1)\\vec{G_1}-N\\vec{G_2})^{(1)}\\rangle\\\\ \\dots\\\\ |(\\vec{q}+M\\vec{G_1}-N\\vec{G_2})^{(1)}\\rangle\\\\ |(\\vec{q}-M\\vec{G_1}-(N-1)\\vec{G_2})^{(1)}\\rangle\\\\ |(\\vec{q}-(M-1)\\vec{G_1}-(N-1)\\vec{G_2})^{(1)}\\rangle\\\\ \\dots\\\\ |(\\vec{q}+M\\vec{G_1}-(N-1)\\vec{G_2})^{(1)}\\rangle\\\\ |(\\vec{q}+M\\vec{G_1}+N\\vec{G_2})^{(1)}\\rangle\\\\ \\dots\\\\ |(\\vec{q}+\\vec{k_{\\theta}}-M\\vec{G_1}-N\\vec{G_2})^{(2)}\\rangle\\\\ \\dots\\\\ |(\\vec{q}+\\vec{k_{\\theta}}+M\\vec{G_1}+N\\vec{G_2})^{(2)}\\rangle\\\\ \\end{bmatrix} \\end{equation} $$\n计算可知该基底长度为 $(2M+1)(2N+1)$\n其中的每个姿态都对应着 $A/B$ 子格的二分量旋量.\n我们写出整个系统的哈密顿量:\n接下来的公式会很长: 确保你的 Markdown 阅读器支持滑轮显示公式, 或者使用带鱼屏.\n$$ \\begin{equation} h^{\\vec{K}}(\\vec{q})=h_{ij}= \\begin{bmatrix} h_{\\vec{K}}^{(1)}(\\vec{q}-M\\vec{G_1}-N\\vec{G_2}) \u0026amp; 0 \u0026amp;\\dots\u0026amp; 0 \u0026amp; T^{1} \u0026amp; 0 \u0026amp; \\dots \u0026amp; 0\\\\ 0 \u0026amp; h_{\\vec{K}}^{(1)}(\\vec{q}-(M - 1)\\vec{G_1}-N\\vec{G_2}) \u0026amp;\\dots \u0026amp; 0 \u0026amp; T^{2} \u0026amp; T^{1} \u0026amp; \\dots \u0026amp; 0\\\\ \\vdots \u0026amp; \\vdots \u0026amp; \\ddots \u0026amp; \\vdots \u0026amp; \\vdots \u0026amp; \\vdots \u0026amp; \\ddots \u0026amp; \\vdots\\\\ 0 \u0026amp; 0 \u0026amp; \\dots \u0026amp; h_{\\vec{K}}^{(1)}(\\vec{q}+M\\vec{G_1}+N\\vec{G_2}) \u0026amp; 0 \u0026amp; 0 \u0026amp; \\dots \u0026amp; T^{1}\\\\ T^{1\\dagger} \u0026amp; T^{2\\dagger} \u0026amp; \\dots \u0026amp; 0 \u0026amp; h_{\\vec{K}}^{(2)}(\\vec{q}+\\vec{k_{\\theta}}-M\\vec{G_1}-N\\vec{G_2}) \u0026amp; 0 \u0026amp; \\dots \u0026amp; 0\\\\ 0 \u0026amp; T^{1\\dagger} \u0026amp; \\dots \u0026amp; 0 \u0026amp; 0 \u0026amp; h_{\\vec{K}}^{(2)}(\\vec{q}+\\vec{k_{\\theta}}-(M - 1)\\vec{G_1}-N\\vec{G_2}) \u0026amp; \\dots \u0026amp; 0\\\\ 0 \u0026amp; 0 \u0026amp; \\dots \u0026amp; 0 \u0026amp; 0 \u0026amp; 0 \u0026amp; \\cdots \u0026amp; 0\\\\ 0 \u0026amp; 0 \u0026amp; \\dots \u0026amp; T^{1\\dagger} \u0026amp; 0 \u0026amp; 0 \u0026amp; \\dots \u0026amp; h_{\\vec{K}}^{(2)}(\\vec{q}+\\vec{k_{\\theta}}+M\\vec{G_1}+N\\vec{G_2})\\\\ \\end{bmatrix} \\end{equation} $$\n对角矩阵元是旋转后的单层狄拉克哈密顿量; 非对角元代表态之间的跃迁矩阵. 因为我们只考虑了最近邻跃迁, 所以非对角元只有 $0, T^{1}, T^{2}$ 三种.\n由此得到总哈密顿量\n$$ \\begin{equation} \\hat{H_{ctn}^{\\vec{k}}}=\\sum_{\\vec{q}}h^{\\vec{K}}(\\vec{q})|\\vec{q}\\rangle\\langle\\vec{q}| \\end{equation} $$\n连续模型在这里还需要对进行进一步的修正.\n在上述的模型中， 我们架设了单层石墨烯晶格是刚性的， 即保持参数 $a = 0.142nm$ 和 $d = 0.33nm$ 不变, 但是为了使得系统处于稳定性(也就是 $\\partial_{\\vec{x}}U=0$), 碳原子实际上会尽可能避免靠得太近.\n转角双层石墨烯具有不同的堆叠类型:\n$AA(BB)$ 型: 上下两层子格完全相同, 位置垂直对齐; $AB$ 型: 上层的 $A$ 原子与下层的 $B$ 原子对齐, 而上层的 $B$ 原子与下层的 $A$ 原子并不对齐; $BA$ 型 : 上层的$B$ 原子与下层的 $A$ 原子对齐, 而上层的 $B$ 原子与下层的 $A$ 原子并不对齐. 我们从曹原给出的参考图来体会这三种类型, 以及它们是如何整体体现在晶格网络上的:\n对于转角双层石墨烯, 弛豫效应也会对电子能带产生显著影响.\n弛豫效应\n在这里的语境下指的是材料中的原子位置会因为某些扰动而发生微小位移, 在计算能带的时候需要将这种位移考虑进去.\n$AA$ 堆叠中原子相互靠得很近, 这会使得势能变得更高, 所以会存在一种趋势, 使得 $AA$ 区域发生扭曲与拉伸, 从而接近于 $AB$ 堆叠区域. 这样的趋势会带来两种后果:\n$d_{AA}\u0026gt;d_{AB}=d_{BA}$. 我们将这种行为称为屈伸($\\text{builkling}$)或者褶皱($\\text{corrugation}$); $AA$ 区域面积收缩, 使得 $AA$ 区域转动更大, $AB$ 区域转动更小. 于是就形成了图上右部分的拓扑连接的结构.\n在转角石墨烯中的摩尔能带一文中我们已经知道, 转角双层石墨烯的能谱在 $\\theta\\neq 0$ 时, 与 $\\vec{d}$ 无关. 所以我们可以把 $T_1, T_2, T_3$ 重写一遍:\n$$ \\begin{equation} T_1=w\\begin{bmatrix} 1 \u0026amp; 1\\\\ 1 \u0026amp; 1\\\\ \\end{bmatrix}, \\end{equation} $$\n$$ \\begin{equation} T_2=w\\begin{bmatrix} 1 \u0026amp; \\omega^{\\star}\\\\ \\omega \u0026amp; 1\\\\ \\end{bmatrix}, \\end{equation} $$\n$$ \\begin{equation} T_3=w\\begin{bmatrix} 1 \u0026amp; \\omega\\\\ \\omega^{\\star} \u0026amp; 1\\\\ \\end{bmatrix}. \\end{equation} $$\n为了引入弛豫效应, 我们引入 $w\u0026rsquo;\u0026lt;w$, 它代表着 $AA$ 堆叠中有着更大的 $a$ 和更小的 堆叠区域面积. 于是我们就有\n$$ \\begin{equation} T_1=\\begin{bmatrix} w\u0026rsquo; \u0026amp; w\\\\ w \u0026amp; w\u0026rsquo;\\\\ \\end{bmatrix}, \\end{equation} $$\n$$ \\begin{equation} T_2=\\begin{bmatrix} w\u0026rsquo; \u0026amp; w\\omega^{\\star}\\\\ w\\omega \u0026amp; w\u0026rsquo;\\\\ \\end{bmatrix}, \\end{equation} $$\n$$ \\begin{equation} T_3=\\begin{bmatrix} w\u0026rsquo; \u0026amp; w\\omega\\\\ w\\omega^{\\star} \u0026amp; w\u0026rsquo;\\\\ \\end{bmatrix}. \\end{equation} $$\n$w = \\frac{t_{k_{D}}}{\\Omega}, \\omega = e^{i2\\pi/3}$\n我们分别求解\u0026rsquo;不考虑弛豫效应\u0026rsquo;和\u0026rsquo;考虑弛豫效应\u0026rsquo;的情况下的能带结构, 可以得到其对比图像:\n该图引自:转角石墨烯的实验研究.胡皓东.2022.上海交通大学.\n其中, 我们重点对比 (b) 和 (d)(或者(f)和(h)), (d) 和 (h) 是未考虑弛豫效应的情况. 不难发现, 弛豫效应使得 $\\Gamma$ 点的能隙明显增大, 并且出现了新的能带, 该能带在很大的 $k$ 空间内都是近似相等的, 我们将这种能带称为平带.\n平带使得能量为0时的态密度可以急剧增加, 而态密度会影响热学和电学等诸多性质.\n同样是在转角石墨烯中的摩尔能带中, 作者介绍了狄拉克点速度随着 $\\theta$ 变化的情况.\n$$ \\frac{v^{\\star}}{v}=\\frac{1-3\\alpha^2}{1+6\\alpha^2} $$\n$\\alpha = w/\\hbar vk_{\\theta}$\n$$ \\lim_{\\alpha\\rightarrow 0}\\frac{v^{\\star}}{v} = 1 -9\\alpha^2 $$\n当$1 -9\\alpha^{2}=0$, 这就是\u0026rsquo;魔角\u0026rsquo;$\\theta_{1} \\approx 1.1°$ 的来源.\n对于后续的魔角, 对应的规一化狄拉克点速度图像则是这样的:\n","permalink":"https://Muatyz.github.io/posts/phy/tbg-nu-cal/","summary":"内容总结于: 转角石墨烯的实验研究.胡皓东.2022.上海交通大学 氢元素低维纳米结构制备及近场光学表征.吕博赛.2022.上海交通大学 Moiré bands in twisted double-layer graphene.Rafi Bistritzer and Allan H. MacDonald.2011. PNAS 单层石墨烯 晶格 对于单层石墨烯而言, 晶格基矢可以写作 $$ \\begin{equation} \\vec{a}_{1} = \\frac{a}{2}(3, \\sqrt{3}),\\vec{a}_{2} = \\frac{a}{2}(3,-\\sqrt{3}). \\end{equation} $$ $a \\approx 1.42 \\overset{\\circ}{A}$ 为碳碳键长度. 根据倒格矢公式可以计算出","title":"转角双层石墨烯的数值计算综述"},{"content":"","permalink":"https://Muatyz.github.io/posts/life/life/","summary":"","title":"Life"},{"content":"Moiré bands in twisted double-layer graphene 双层石墨烯出现转角时, 在整体层面会出现摩尔纹.\nAbstract A moiré pattern is formed when two copies of a periodic pattern are overlaid with a relative twist. We address the electronic structure of a twisted two-layer graphene system, showing that in its continuum Dirac model the moiré pattern periodicity leads to moiré Bloch bands. The two layers become more strongly coupled and the Dirac velocity crosses zero several times as the twist angle is reduced. For a discrete set of magic angles the velocity vanishes, the lowest moiré band flattens, and the Dirac-point density-of states and the counterflow conductivity are strongly enhanced.\n译:\n当一个周期性图案的两个副本以一定扭转角的方式叠加在一起时, 就会形成摩尔纹图案.\n我们讨论了扭曲的两层石墨烯系统的电子结构, 表明在其连续的狄拉克模型中, 摩尔纹的周期性导致了摩尔布洛赫带.\n两层石墨烯变得更加强烈的耦合, 并且随着扭曲角度的减小, 狄拉克速度多次过零.\n对于一组离散的魔角, 速度消失, 最低的摩尔带变平, 迪拉克点态密度和逆流电导率强烈增强.\nLow-energy electronic properties of few layer graphene (FLG) systems are known (1–8) to be strongly dependent on stacking arrangement. In bulk graphite 0° and 60° relative orientations of the individual layer honeycomb lattices yield rhombohedral and Bernal crystals, but other twist angles also appear in many samples (9). Small twist angles are particularly abundant in epitaxial graphene layers grown on SiC (10, 11), but exfoliated bilayers can also appear with a twist, and arbitrary alignments between adjacent layers can be obtained by folding a single graphene layer(12, 13)\n译:\n众所周知（1-8）, 少层石墨烯（FLG）系统的能量电子特性在很大程度上取决于堆叠排列.\n在散装石墨中, 单个层蜂窝状晶格的0°和60°相对方向产生斜方体和贝纳尔晶体, 但其他扭曲角也出现在许多样品中（9）.\n在SiC上生长的外延石墨烯层中, 小扭曲角特别多（10, 11）, 但剥离的双层也会出现扭曲, 而且相邻层之间的任意排列可以通过折叠单个石墨烯层获得（12, 13）.\n贝纳尔晶体\n是一种液体流体现象, 它在一定条件下会形成有规律的细胞状结构, 这些细胞状结构有明确的界限, 形状规则, 大小一致, 并且呈现出有序的排列.\nRecent advances in FLG preparation methods have attracted theoretical attention (14–20) to the intriguing electronic properties of systems with arbitrary twist angles, usually focusing on the two-layer case. The geometry of the bilayer system is characterized by a twist angle θ and by a translation vector d. Commensurability is determined only by θ. Sliding one layer with respect to the other in a commensurate structure modifies the unit cell but leaves the bilayer crystalline. In this work we find it convenient to regard the AB stacking as the aligned configuration. The positions of the carbon atoms in the two misaligned layers labeled by R and R\u0026rsquo; are then related by $\\vec{R\u0026rsquo;}=M(θ)(\\vec{R}-\\tau)+\\vec{d}$, where M is a 2-D rotation matrix within the graphene plane, and $\\tau$ is a vector connecting the two atoms in the unit cell.\n译:\n最近FLG制备方法的进展, 吸引了理论界对任意扭曲角下系统的有趣电子特性的关注(14-20).(特别是双层系统的情况)\n双层系统的几何特征是由扭曲角θ和平移矢量d决定的.在这项工作中, 我们发现将AB堆叠视为对齐的配置是很方便的.\n在两个错位的层中, 碳原子的位置由 $R$ 和 $R\u0026rsquo;$ 标记, 然后由 $\\vec{R\u0026rsquo;}=M(θ)(\\vec{R}-\\tau)+\\vec{d}$ 公式进行关联, 其中M是石墨烯平面内的2维旋转矩阵, $\\tau$ 是连接单元格中两个原子的矢量.\nThe problem is mathematically interesting because a bilayer forms a two-dimensional crystal only at a discrete set of commensurate rotation angles; for generic twist angles Bloch’s theorem does not apply microscopically and direct electronic structure calculations are not feasible. For twist angles larger than a few degrees the two layers are electronically isolated to a remarkable degree, except at a small set of angles which yield low-order commensurate structures (16, 19). As the twist angles become smaller, interlayer coupling strengthens, and the quasiparticle velocity at the Dirac point begins to decrease.\n译:\n这个问题在数学上是有趣的, 因为双层晶体只在一组离散的相称旋转角下形成；对于一般的扭转角, 布洛赫定理在显微镜下并不适用, 直接的电子结构计算是不可行的.\n对于大于几度的扭转角, 除了在一小部分产生低阶相称结构的角度外, 两层的电子隔离程度很高（16, 19）.随着扭曲角的变小, 层间耦合加强, 迪拉克点的准粒子速度开始下降.\n人话:\nθ减小的时候,层间相互作用增强,狄拉克点就是能带的零点,零点向动量原点移动,也就是对应的准速度降低了.\nHere we focus on the strongly coupled small twist angle regime. We derive a low-energy effective Hamiltonian valid for any value of d and for θ ≲ 10° irrespective of whether or not the bilayer structure is periodic. We show that it is meaningful to describe the electronic structure using Bloch bands even for incommensurate twist angles and study the dependence of these bands on θ.\n译:\n在此, 我们重点讨论强耦合的小扭曲角机制.\n我们推导出了一个低能量条件下的有效哈密顿量(对任何d值和θ≲10°都有效,无论双层结构是否是周期性的).\n我们证明, 即使对于不相称的扭转角, 用布洛赫带描述电子结构也是有意义的, 并研究了这些能带对θ的依赖性.\nModel We construct a low-energy continuum model Hamiltonian that consists of three terms: two single-layer Dirac–Hamiltonian terms that account for the isolated graphene sheets and a tunneling term that describes hopping between layers. The Dirac–Hamiltonian (21) for a layer rotated by an angle θ with respect to a fixed coordinate system is\n$$ v_k= vk\\begin{bmatrix} 0 \u0026amp; e^{i(θ_{k}-θ)} \\\\ e^{-i(θ_{k}-θ)} \u0026amp; 0 \\\\ \\end{bmatrix} $$\nwhere v is the Dirac velocity, k is momentum measured from the layer’s Dirac point, $θ_k$ is the momentum orientation relative to the x axis, and the spinor Hamiltonian acts on the individual layer’s A and B sublattice degrees-of-freedom. We choose the coordinate system depicted in Fig. 1 for which the decoupled bilayer Hamiltonian is $|1\\rangle h(θ/2)\\langle 1|+|2\\rangle h(-θ/2)\\langle 2|$, where $|i\\rangle\\langle i|$ projects onto layer $i$.\n译:\n我们构建了一个低能连续模型下的哈密顿量, 它由三个项组成：两个单层狄拉克-哈密顿项(代表孤立的石墨烯层), 一个\u0026quot;Tunneling\u0026quot;项(TUNNEL可以理解为隧穿的过程), 描述层间的跳跃.\n相对于固定坐标系, 旋转一个角度θ的层的狄拉克-哈米顿项（21）为\n$$v_k= vk\\begin{bmatrix} 0 \u0026amp; e^{i(θ_{k}-θ)} \\\\ e^{-i(θ_{k}-θ)} \u0026amp; 0 \\\\ \\end{bmatrix} $$\n其中v是狄拉克速度, k是从层的狄拉克点测得的动量, $θ_k$ 是相对于X轴的动量方向, 自旋体哈密尔顿作用于各个层的A和B子晶格自由度.\n我们选择图1中描述的坐标系, 对于该坐标系, 解耦双层哈密顿式为 $|1\\rangle h(θ/2)\\langle 1|+|2\\rangle h(-θ/2)\\langle 2|$, 其中 $|i\\rangle\\langle i|$ 投射到层 $i$.\nWe derive a continuum model for the tunneling term by assuming that the interlayer tunneling amplitude between π-orbitals is a smooth function $t(r)$ of spatial separation projected onto the graphene planes. The matrix element $T_{\\vec{k}\\vec{p\u0026rsquo;}}^{αβ}=\\langle Ψ_{\\vec{k}}^{(1)}|H_{T}|Ψ_{\\vec{p\u0026rsquo;}β}^{(2)}\\rangle$ of the tunneling Hamiltonian HT describes a process in which an electron with momentum $\\vec{p\u0026rsquo;}=M\\vec{p}$ residing on sublattice β in one layer hops to a momentum state $\\vec{k}$ and sublattice α in the other layer. In a π-band tight-binding model the projection of the wave functions of the two layers to a given sublattice are $|\\Psi_{\\vec{k}α}^{(1)}=\\frac{1}{\\sqrt{N}}∑_{\\vec{R}}e^{i\\vec{k}(R+\\tau_{α})}|\\vec{R}+\\tau_{α}\\rangle$ and $|\\Psi_{\\vec{p}β}^{(2)}=\\frac{1}{\\sqrt{N}}∑_{\\vec{R\u0026rsquo;}}e^{i\\vec{p}(R\u0026rsquo;+\\tau_{β}\u0026rsquo;)}|\\vec{R\u0026rsquo;}+\\tau_{β}\\rangle$\n译:\n我们假设π轨道之间的层间跃迁振幅是投射到石墨烯平面上的空间分离的平滑函数$t(r)$, 从而得到了层间跃迁项的连续模型.\n层间跃迁项哈密顿量 $H_{T}$ 的矩阵元素\n$T_{\\vec{k}\\vec{p\u0026rsquo;}}^{αβ}=\\langle Ψ_{\\vec{k}\\alpha}^{(1)}|H_{T}|Ψ_{\\vec{p\u0026rsquo;}β}^{(2)}\\rangle $\n描述了一个过程, 其中一个具有 $\\vec{p\u0026rsquo;}=M\\vec{p}$ 动量的电子在一层的子晶格β上跳到另一层的动量态 $\\vec{k}$ 和子晶格α上. 在一个π带紧-结合模型中, 两层的波函数对一个给定的子晶格的投射为\n$|\\Psi_{\\vec{k}α}^{(1)}\\rangle=\\frac{1}{\\sqrt{N}}∑_{\\vec{R}}e^{i\\vec{k}(R+\\tau_{α})}|\\vec{R}+\\tau_{α}\\rangle$ 和 $|\\Psi_{\\vec{p}β}^{(2)}\\rangle=\\frac{1}{\\sqrt{N}}∑_{\\vec{R\u0026rsquo;}}e^{i\\vec{p}(R\u0026rsquo;+\\tau_{β}\u0026rsquo;)}|\\vec{R\u0026rsquo;}+\\tau_{β}\\rangle$\nHere $\\tau_{A}=0$,$ \\tau_{B}=\\tau$, and $\\vec{R}$ is summed over the triangular Bravais lattice. Substituting Eqs. 2 and 3 in Eq. 1 and invoking the twocenter approximation, $\\langle\\vec{R}+\\tau_{α}|H_{T}|\\vec{R\u0026rsquo;}+\\tau_{α}-\\vec{R\u0026rsquo;}-\\tau\u0026rsquo;_{β}\\rangle$ for the interlayer hopping amplitude in which t depends on the difference between the positions of the two carbon atoms we find that\n$T_{\\vec{k}\\vec{p\u0026rsquo;}}^{αβ}=∑_{\\vec{G_{1}}\\vec{G_{2}}}\\frac{t_{\\overline{k}+\\vec{G}}}{Ω}e^{i[\\vec{G_{1}}\\tau_{α}-\\vec{G_2}(\\tau_{β}-\\tau)-\\vec{G_{2}\u0026rsquo;}\\vec{d}]}δ_{\\overline{k}+\\vec{G_{1}},\\overline{p\u0026rsquo;}+\\vec{G\u0026rsquo;_{2}}}$\n译:\n在这里, $\\tau_{A}=0$, $\\tau_{B}=\\tau$, $\\vec{R}$ 在三角布拉维格子上求和. 将式2和式3代入式1并调用双中心近似中的 $\\langle\\vec{R}+\\tau_{α}|H_{T}|\\vec{R\u0026rsquo;}+\\tau_{α}-\\vec{R\u0026rsquo;}-\\tau\u0026rsquo;_{β}\\rangle$ 表示层间跃迁振幅, 其中$t$取决于两个碳原子的位置差异.\n我们发现\n$T_{\\vec{k}\\vec{p\u0026rsquo;}}^{αβ}=∑_{\\vec{G_{1}}\\vec{G_{2}}}\\frac{t_{\\overline{k}+\\vec{G}}}{Ω}e^{i[\\vec{G_{1}}\\tau_{α}-\\vec{G_2}(\\tau_{β}-\\tau)-\\vec{G_{2}\u0026rsquo;}\\vec{d}]}δ_{\\overline{k}+\\vec{G_{1}},\\overline{p\u0026rsquo;}+\\vec{G_{2}\u0026rsquo;}}$.{#eq5}\nHere $Ω$ is the unit cell area, $t_{\\vec{q}}$ is the Fourier transform of the tunneling amplitude $t(\\vec{r})$, the vectors $\\vec{G_{1}}$ and $\\vec{G_{2}}$ are summed over reciprocal lattice vectors, and $\\vec{G_{2}\u0026rsquo;}=M\\vec{G_{2}}$. The bar notation over momenta in Eq. 5 indicates that momentum is measured relative to the center of the Brillouin zone and not relative to the Dirac point. Note that crystal momentum is conserved by the tunneling process because $t$ depends only on the difference between lattice positions.\n译:\n这里$Ω$是单位晶胞面积, $t_{\\vec{q}}$ 是层间跃迁振幅 $t(\\vec{r})$ 的傅里叶变换, 向量 $\\vec{G_{1}}$ 和 $\\vec{G_{2}}$ 是倒数晶格向量的总和, $\\vec{G_{2}\u0026rsquo;}=M\\vec{G_{2}}$. 公式5中动量的上划线表示:动量是相对于布里渊区的中心而不是相对于狄拉克点(能带零点)测量的.\n注意:晶体动量在层间跃迁过程中是守恒的, 因为$t$只取决于晶格位置的差异.\nThe continuum model for $H_{T}$ is obtained by measuring wave vectors in both layers relative to their Dirac points and assuming that the deviations are small compared to Brillouin-zone dimensions. The model’s utility rests centrally on the observation that, although $t_{q}$ is not precisely known, it should nevertheless fall to zero very rapidly with $q$ on the reciprocal lattice vector scale. This behavior follows from the property that the graphene layer separation $d_{\\perp}$ exceeds the separation between carbon atoms within the layers by more than a factor of 2.\n译:\n$H_{T}$ 的连续模型就可以通过测量两层中相对于其狄拉克点的波矢量(同时假设它与布里渊区尺寸相比偏差很小)得到. 该模型的效用集中体现在这样的观察上： 即使$t_{q}$并不精确, 但它应该随着倒格子矢量尺度上的$q$增大而迅速下降到零.\n这一行为来自于石墨烯层的分离度 $d_{\\perp}$ 超过层内碳原子之间分离度2倍以上的特性.\nBecause the two-center integral $t(r)$ varies with the three-dimensional separation $R = \\sqrt{r^2+d_{\\perp}^2}$ the strong small $r$ hopping processes vary with $r$ on the scale of $d_{\\perp}$. For this reason $t_{q}$ begins to decline rapidly for $qd_{\\perp} \u0026gt; 1$. Fig. 2 plots $t_{q}$ values obtained numerically from the π-band tight-binding models proposed in refs.19, 22, and 23. The largest $t_{q}$ values that enter the tunneling near the Dirac point have $q=k_{D}$, the Brillouin-zone corner (Dirac) wave vector magnitude, and correspond to the three reciprocal vectors $\\vec{0}$, $\\mathcal{G}^{(2)}$ and $\\mathcal{G}^{(3)}$ where the latter two vectors connect a Dirac point with its equivalent first Brillouin-zone counterparts (See Fig. 1).\n译:\n由于两中心积分(指的是计算两个中心之间的积分, 比如原子核或者分子之间.需要用到密度泛函理论) $t(r)$ 随三维分离度 $R=\\sqrt{r^2+d_{\\perp}^2}$ 的变化而变化, 所以强的小的$r$跳跃过程在 $d_{\\perp}$ 的尺度上随$r$变化.\n因此, $t_{q}$ 在 $qd_{\\perp}\u0026gt; 1$ 时开始迅速下降. 图2显示了π带的紧束缚模型(参考文献19、22和23中提出的)中以数值方式计算而来的 $t_{q}$ 值. 在狄拉克点附近进入层间跃迁的最大的 $t_{q}$值是$q=k_{D}$, 即布里渊区角(狄拉克)波矢量大小, 对应于三个倒格子矢量 $\\vec{0}$、$\\mathcal{G}^{(2)}$ 和 $\\mathcal{G}^{(3)}$, 其中后两个矢量分别连接狄拉克点和其等同的第一布里渊区对应点(参见图1).\nWhen only these terms are retained,\n$T^{αβ}(\\vec{r})=w∑_{j=1}^{3}e^{-i\\vec{q_{i}}\\cdot\\vec{r}}T_{j}^{αβ},$\nwhere $w=t_{k_{D}}/Ω$ is the hopping energy,\n$$ T_{1}=\\begin{bmatrix} 1 \u0026amp; 1\\\\ 1 \u0026amp; 1\\\\ \\end{bmatrix}, T_{2}= e^{-i\\mathcal{G}^{(2)\u0026rsquo;}\\cdot\\vec{d}}\\begin{bmatrix} e^{-iϕ} \u0026amp; 1\\\\ e^{iϕ} \u0026amp; e^{-iϕ}\\\\ \\end{bmatrix}, T_{3}= e^{-i\\mathcal{G}^{(3)\u0026rsquo;}\\cdot\\vec{d}}\\begin{bmatrix} e^{iϕ} \u0026amp; 1\\\\ e^{-iϕ} \u0026amp; e^{iϕ}\\\\ \\end{bmatrix},$$\nand $ϕ = 2π∕3$. The three $\\vec{q_{j}}$’s in Eq. 6 are Dirac model momentum transfers that correspond to the three interlayer hopping processes.\n译:\n当只保留这些项时, $T^{αβ}(\\vec{r})=w∑_{j=1}^{3}e^{-i\\vec{q_{i}}\\cdot\\vec{r}}T_{j}^{αβ}$, 其中 $w=t_{k_{D}}/Ω$ 是跃迁动能,\n$$ T_{1}=\\begin{bmatrix} 1 \u0026amp; 1\\\\ 1 \u0026amp; 1\\\\ \\end{bmatrix}, T_{2}= e^{-i\\mathcal{G}^{(2)\u0026rsquo;}\\cdot\\vec{d}}\\begin{bmatrix} e^{-iϕ} \u0026amp; 1\\\\ e^{iϕ} \u0026amp; e^{-iϕ}\\\\ \\end{bmatrix}, T_{3}= e^{-i\\mathcal{G}^{(3)\u0026rsquo;}\\cdot\\vec{d}}\\begin{bmatrix} e^{iϕ} \u0026amp; 1\\\\ e^{-iϕ} \u0026amp; e^{iϕ}\\\\ \\end{bmatrix},$$\n并且 $ϕ = 2π∕3$. 公式6中的三个 $\\vec{q_{j}}$ 是狄拉克模型的动量转移, 对应于三种层间跃迁过程.\nFor $\\vec{d}=0$ and a vanishing twist angle the continuum tunneling matrix is $3wδ_{αA}δ_{βB}$, independent of position. By comparing with the experimentally known (24) electronic structure of an AB stacked bilayer we set $w ≈ 110 meV$ for exfoliated samples, however experiments suggest (25) that $w$ may be smaller in some epitaxial graphene samples. As we show below the spectrum is independent of $\\vec{d}$ for $\\theta\\neq 0$. In the following we therefore set $\\vec{d}=0$.\n译:\n对于 $\\vec{d}=0$ 和扭转角度为零的情况, 连续隧穿矩阵为 $3wδ_{αA}δ_{βB}$, 并且这个量与位置无关. 通过与已知的\u0026quot;AB-堆叠\u0026quot;方式的双层材料的电子结构 (24) 进行比较, 我们设 $w\\approx 110\\text{ meV}$ 用于剥落的样品, 然而实验表明 (25) 在一些外延石墨烯样品中 $w$ 可能更小. 正如我们下面所展示的, 当 $\\theta\\neq 0$, 光谱与 $\\vec{d}$ 无关.因此, 在接下来的讨论中, 我们不妨设 $\\vec{d}=0$.\nResults Moiré Bloch Bands In the continuum model hopping is local and periodic, allowing Bloch’s theorem to be applied at any rotation angle irrespective of whether or not the bilayer is crystalline. We solve numerically for the moiré bands using the plane wave expansion illustrated in Fig. 1. Convergence is attained by truncating momentum space at lattice vectors of the order of $w/\\hbar v$. The dimension of the matrix, which must be diagonalized numerically, is roughly $∼10 \\theta^{-2}$ for small $\\theta$ (measured in degrees), compared to the $∼10^{4} \\theta^{-2}$ matrix dimension of microscopic tight-binding models (14, 16).\n译:\n在连续模型中, 跃迁具有局域性(或者说定域性)和周期性, 这使得布洛赫定理在任何旋转角下都能应用, 无论双层膜是否具有晶体结构. 如图一所示,我们使用平面波级数展开的方式对摩尔纹带进行数值求解. 通过将动量空间截断在大小为 $w/\\hbar v$ 的晶格矢量处, 可以实现收敛. 对于小的 $\\theta$ (单位为度), 该矩阵(数值求解对角化,从而得到摩尔纹带的能带结构)的维数大约为 $∼10 \\theta^{-2}$, 相比于微观紧束缚模型下的 $∼10^{4} \\theta^{-2}$ 的矩阵维数更小 (14, 16).\nUp to a scale factor the moiré bands depend on a single parameter $\\alpha=w/vk_{\\theta}$. We have evaluated the moiré bands as a function of their Brillouin-zone momentum $k$ for many different twist angles; results for $w = 110 meV$, and $θ = 5°$, $1.05°$, and $0.5°$ are summarized in Fig. 3. For large twist angles the low-energy spectrum is virtually identical to that of an isolated graphene sheet, except that the velocity is slightly renormalized. Large interlayer coupling effects appear only near the high energy van Hove singularities discussed by Andrei and coworkers (26). As the twist angle is reduced, the number of bands in a given energy window increases and the band at the Dirac point narrows. This narrowing has previously been expected to develop monotonically with decreasing $θ$.\n译:\n只要不超过某个比例因子,摩尔纹带都将仅取决于唯一参数 $\\alpha=w/vk_{\\theta}$. 我们将摩尔纹带视为其布里渊区动量$k$的函数, 并且对这个函数在许多不同扭曲角下的情况进行了评估. 图3总结了 $w=110 meV$, 且 $θ=5°$,1.05°$和0.5°$的结果. 如果旋转角很大, 低能带几乎与单层石墨烯相同, 只是速度需要略微重整化. 大的层间耦合效应只会出现在高能范霍夫奇点附近(这一观点由Andrei及其合作者讨论得出(26)). 随着扭转角的减少, 在一个给定的能量窗口中, 带的数量增加, 在狄拉克点的带变窄. 这种变窄以前被认为是随着$θ$的减少而单调地发展.\n范霍夫奇点\n晶格的布里渊区边界处的特殊点, 此时电子的态密度会发生突变.这种突变可以是因为在此处出现了能带的极值点, 也可以是因为能带的疏密程度在此处发生了变化.\nAs illustrated in Fig. 3, we instead find that the Dirac-point velocity vanishes already at $θ ≈ 1.05°$, and that the vanishing velocity is accompanied by a very flat moiré band which contributes a sharp peak to the Dirac-point density-of-states (DOS). At smaller twists the Dirac-point velocity has a nonmonotonic dependence on $\\theta$, vanishing repeatedly at the series of magic angles illustrated in Fig. 4.\n译:\n如图3所示, 我们发现狄拉克点速度在 $θ≈1.05°$ 时就已经消失了, 而且速度的消失伴随着一个非常平坦的摩尔带, 为狄拉克点态密度贡献了一个尖锐的峰值. 在更小的旋转角下, 狄拉克点速度对 $\\theta$ 有一个非单调的依赖(实际上就是反复波动,只能看出有多个零点), 在图4所示的一系列魔角处反复为0(也就是所谓的\u0026quot;消失\u0026quot;).\nPartial insight into the origin of these behaviors can be achieved by examining the simplest limit in which the momentum-space lattice is truncated at the first honeycomb shell. Including the sublattice degree of freedom, this truncation gives rise to the Hamiltonian\n$\\mathcal{H_{\\vec{k}}}=\\begin{bmatrix} h_{\\vec{k}}(\\theta/2) \u0026amp; T_{b} \u0026amp; T_{tr} \u0026amp; T_{tl}\\\\ T_{b}^{\\dagger} \u0026amp; h_{\\vec{k_{b}}}(-\\theta/2) \u0026amp; 0 \u0026amp; 0\\\\ T_{tr}^{\\dagger} \u0026amp; 0 \u0026amp; h_{\\vec{k_{tr}}}(-\\theta/2) \u0026amp; 0\\\\ T_{tl}^{\\dagger} \u0026amp; 0 \u0026amp; 0 \u0026amp; h_{\\vec{k_{tl}}}(-\\theta/2)\\\\ \\end{bmatrix}$,\nwhere $\\vec{k}$ is in the moiré Brillouin-zone and $\\vec{k_{j}}=\\vec{k}+\\vec{q_{j}}$. This Hamiltonian acts on four two-component spinors $\\Psi=(\\psi_{0},\\psi_{1},\\psi_{2},\\psi_{3})$. The first ($\\psi_{0}$) is at a momentum near the Dirac point of one layer and the other three $\\psi_{j}$ are at momenta near $\\vec{q_{j}}$ and in the other layer. The dependence of $h(\\theta)$ on angle is parametrically small and can be neglected. We have numerically verified that this approximation reproduces the velocity with reasonable accuracy down to the first magic angle (Fig. 4, Inset).\n译:\n如果采用最简单的截断方法(即选取动量空间晶格中的第一个蜂巢壳处)来取极限, 我们可以对这些特性的起源有部分了解.\n将子晶格的自由度也考虑在内, 这种截断就产生了哈密顿量的表达式:\n$$ \\mathcal{H_{\\vec{k}}}=\\begin{bmatrix} h_{\\vec{k}}(\\theta/2) \u0026amp; T_{b} \u0026amp; T_{tr} \u0026amp; T_{tl}\\\\ T_{b}^{\\dagger} \u0026amp; h_{\\vec{k_{b}}}(-\\theta/2) \u0026amp; 0 \u0026amp; 0\\\\ T_{tr}^{\\dagger} \u0026amp; 0 \u0026amp; h_{\\vec{k_{tr}}}(-\\theta/2) \u0026amp; 0\\\\ T_{tl}^{\\dagger} \u0026amp; 0 \u0026amp; 0 \u0026amp; h_{\\vec{k_{tl}}}(-\\theta/2)\\\\ \\end{bmatrix} $$\n其中 $\\vec{k}$ 处于摩尔布里渊区, $\\vec{k_{j}}=\\vec{k}+\\vec{q_{j}}$.\n这个哈密顿量作用于四个双分量自旋子 $\\Psi=(\\psi_{0},\\psi_{1},\\psi_{2},\\psi_{3})$. 第一个（$\\psi_{0}$）是在一个某层石墨烯狄拉克点附近的动量, 其他三个 $\\psi_{j}$ 则是在 $\\vec{q_{j}}$ 附近的动量, 位置则是在另一层石墨烯中.\n$h(\\theta)$ 对角度的依赖性在参数上很小,所以可以忽略不计.\n我们已经用数值验证了,这种近似方法直到第一个魔转角都能以合理的精度重现了速度.（图4）.\nThe renormalized velocity $v^{\\star}=\\partial_{\\vec{k}}\\epsilon_{\\vec{k}}^{\\star}|^{\\vec{k}=0}$ follows from the spectrum $\\epsilon_{\\vec{k}}^{\\star}$ of the twisted bilayer. The Hamiltonian is expressed as a sum of the $\\vec{k}=0$ term $\\mathcal{H}^{(0)}$ and the k-dependent term $\\mathcal{H}_{\\vec{k}}^{(1)}$ and solved to leading order in $\\vec{k}$. Consider the $\\vec{k}=0$ term in the Hamiltonian. We assume that $\\mathcal{H}^{(0)}$ has zero energy eigenstates and prove our assumption by explicitly finding these states. The zero energy eigenstates must satisfy\n$\\psi_{j}=-h_{j}^{-1}T_{j}^{\\dagger}\\psi_{0}$.\n译:\n我们可以从转角双层石墨烯的能谱 $\\epsilon_{\\vec{k}}^{\\star}$ 得到重整化后的速度 $v^{\\star}=\\partial_{\\vec{k}}\\epsilon_{\\vec{k}}^{\\star}|_{\\vec{k}=0}$.\n该哈密顿量被表示为 $\\vec{k}=0$ 的项 $\\mathcal{H}^{(0)}$ 以及依赖于$k$的项 $\\mathcal{H}{\\vec{k}}^{(1)}$ 的和, 并在 $\\vec{k}$ 的级数展开上求解.\n我们考虑哈密顿量中的 $\\vec{k}=0$ 项. 我们假设 $\\mathcal{H}^{(0)}$ 有零能量的本征态(我们将找到这些态以证明这个假设).\n零能量本征态必须满足:\n$\\psi_{j}=-h_{j}^{-1}T_{j}^{\\dagger}\\psi_{0}$.[9]\nBecause\n$T_{j}h_{j}^{-1}T_{j}^{\\dagger}=0$\nthe equation for the $\\psi_{0}$ spinor is $h_{0}\\psi_{0}=0$, i.e., $\\psi_{0}$ is one of the two zero energy states $\\psi_{0}^{(1)}$ and $\\psi_{0}^{(2)}$ of the isolated layer. The two zero energy eigenstates of $\\mathcal{H}^{(0)}$ then follow from Eq. 9. Given that $|\\psi_{0}^{(j)}|=1$, the wave functions should be normalized by $|\\Psi|^{2}=1+6\\alpha^{2}$. The effective Hamiltonian matrix to leading order in $k$ is therefore\n$\\langle\\Psi^{(i)}|\\mathcal{H}_{\\vec{k}}^{(1)}|\\Psi^{(j)}\\rangle=$\n$\\frac{-v}{1+6\\alpha^2}\\psi_{0}^{(j)\\dagger}[\\sigma\\cdot\\vec{k}+w^2\\sum_{j}T_{j}h_{j}^{-1\\dagger}\\sigma\\cdot\\vec{k}h_{j}^{-1}T_{j}^{\\dagger}]\\psi_{0}^{(j)}$\n$=-v^{\\star}\\psi_{0}^{(j)\\dagger}\\sigma\\cdot\\vec{k}\\psi_{0}^{(j)}$.\n译:\n由于\n$T_{j}h_{j}^{-1}T_{j}^{\\dagger}=0$,\n因此 $\\psi_{0}$ 的自旋轨道满足 $h_{0}\\psi_{0}=0$, 即 $\\psi_{0}$ 是孤立层的两个零能态 $\\psi_{0}^{(1)}$ 和 $\\psi_{0}^{(2)}$ 之一.\n然后, 根据式子[9], 可以得到 $\\mathcal{H}^{(0)}$ 的两个零能量本征态.\n考虑到 $|\\psi_0^{(j)}|=1$, 波函数应当通过 $|\\Psi|^{2}=1+6\\alpha^2$ 进行归一化.\n因此, 在$k$的一阶导数方面的有效哈密顿矩阵为：\n$\\langle\\Psi^{(i)}|\\mathcal{H_{\\vec{k}}^{(1)}|\\Psi^{(j)}}\\rangle= \\frac{-v}{1+6\\alpha^2}\\psi_{0}^{(j)\\dagger}[\\sigma\\cdot\\vec{k}+w^2\\sum_{j}T_{j}h_{j}^{-1\\dagger}\\sigma\\cdot\\vec{k}h_{j}^{-1}T_{j}^{\\dagger}]\\psi_{0}^{(j)}=-v^{\\star}\\psi_{0}^{(j)\\dagger}\\sigma\\cdot\\vec{k}\\psi_{0}^{(j)}$.\nAside from a renormalized velocity\n$\\frac{v^{\\star}}{v}=\\frac{1-3\\alpha^2}{1+6\\alpha^2}$\nthe Hamiltonian is identical to the continuum model Hamiltonian of single-layer graphene. The denominator in Eq. 11 captures the contribution of the $\\Psi_{j}$ ’s to the normalization of the wave function whereas the numerator captures their contribution to the velocity matrix elements. For small $\\alpha$, Eq. 11 reduces to the expression $v^{\\star}/v=1-9\\alpha^2$, first obtained by Lopes dos Santos et al. (15). The velocity vanishes at the first magic angle because it is in the process of changing sign. The eigenstates at the Dirac point are a coherent combination of components in the two layers that have velocities of opposite sign.\n译:\n除了一个经过重整化的速度\n$\\frac{v^{\\star}}{v}=\\frac{1-3\\alpha^2}{1+6\\alpha^2}$,\n哈密顿量与单层石墨烯的连续模型哈密顿量相同. 在方程式11中, 分母体现的是 $\\Psi_j$ 对波函数归一化的贡献, 而分子体现的是到它们对速度矩阵元的贡献. 对于小的 $\\alpha$, 方程式11简化为 $v^\\star/v=1-9\\alpha^2$(该式由Lopes dos Santos等人首次得到). 在第一个魔转角处速度降为0, 因为它正在变号. 在Dirac点处的本征态是两个石墨烯层中速度具有相反符号的组分的相干组合.\n人话:\n每个石墨烯层中只有一个态,而两个石墨烯层进行比较的时候,两个态的速度异号, 在Dirac点处的本征态是这两个态的线性组合.\nCounterflow Conductivity. Counterflow Conductivity\n当两个电子系统在相反方向移动时, 它们之间的电导率.在材料物理学中, 常常通过测量两个相反方向移动的电子系统之间的电导率来研究电子的输运性质.当两个电子系统的速度相等但方向相反时, 它们之间的电导率通常会非常小, 这种现象被称为“counterflow conductivity suppression”.这种效应在石墨烯等二维材料中经常被观察到, 并且对于研究这些材料的电子输运性质非常重要.\nThe distribution of the quasiparticle velocity between the two layers implies exotic transport characteristics for separately contacted layers. Consider a counterflow geometry in which currents in the two layers flow antiparallel to one another. We focus on twist angles $θ ≳ 2°$ for which the eightband model is valid and to the semiclassical regime in which $\\epsilon_{F}\\tau \u0026gt;1$ and find the counterflow conductivity $\\sigma_{CF}$. We assume that the Fermi momentum is much smaller than $k_{\\theta}$ and that $1/\\tau_{0}\u0026lt;\\hbar vk_{\\theta}$, where $\\tau_{0}$ is single particle lifetime. Using the Kubo formula we find that\n$$\\sigma_{CF}=\\frac{4e^{2}}{\\pi}\\sum_{\\vec{k}\\mu}|\\langle\\psi_{k}|v_{VF}^{x}|\\psi_{k}\\rangle|^2[Im\\{G_{k\\mu}^{r}(\\epsilon_{F})\\}]$$\nwhere\n$$ v_{CF}^{x}=-v\\begin{bmatrix} \\sigma_{x} \u0026amp; 0 \u0026amp; 0 \u0026amp; 0\\\\ 0 \u0026amp; -\\sigma_{x} \u0026amp; 0 \u0026amp; 0\\\\ 0 \u0026amp; 0 \u0026amp; -\\sigma_{x} \u0026amp; 0\\\\ 0 \u0026amp; 0 \u0026amp; 0 \u0026amp; -\\sigma_{x}\\\\ \\end{bmatrix}, $$\nis the x component of the counterflow velocity operator (we set the electric fields along the x axis), $G_{k\\mu}^{r}(\\omega)=(\\omega-\\epsilon_{k\\mu}^{\\star}+i/2\\tau_{0})^{-1}$ is the retarded Green function with $\\mu$ labeling the two Dirac bands, and $\\epsilon_{k\\mu}^{\\star}=\\mu v^{\\star}k$ is the energy dispersion of the twisted bilayer at small momenta.\n译:\n在两层之间准粒子速度的分布意味着分别接触的层具有奇特的输运特性. 考虑一种反流几何形状, 其中两层中的电流彼此反向流动. 我们关注扭转角 $θ ≳ 2°$, 其中八带模型有效且处于半经典状态, 此时 $\\epsilon_{F}\\tau \u0026gt;1$, 并找到了反流电导 $\\sigma_{CF}$.\n八带模型\n“八带模型”是一种用于描述扭曲双层石墨烯的理论模型.在这个模型中, 每个石墨烯层的两个Dirac点之间的相互作用被考虑在内, 因此会出现四个价带和四个导带, 共计八个带.相比于单层石墨烯的两个带（一个价带和一个导带）, 八带模型提供了更为准确的描述扭转双层石墨烯的方式.在八带模型中, 每个带的色散关系（即能量与动量的关系）由一组非常复杂的解析式给出.八带模型的具体公式实际上就是本文所给出的 $\\sigma_{CF}$ 的表达式.\n我们假设费米动量远小于 $k_{\\theta}$, 并且 $1/\\tau_{0}\u0026lt;\\hbar vk_{\\theta}$, 其中 $\\tau_{0}$ 是单粒子寿命.使用Kubo公式, 我们得到：\n$$\\sigma_{CF}=\\frac{4e^{2}}{\\pi}\\sum_{\\vec{k}\\mu}|\\langle\\psi_{k}|v_{VF}^{x}|\\psi_{k}\\rangle|^2[Im{G_{k\\mu}^{r}(\\epsilon_{F})}]$$\n其中,\n$$ v_{CF}^{x}=-v\\begin{bmatrix} \\sigma_{x} \u0026amp; 0 \u0026amp; 0 \u0026amp; 0\\\\ 0 \u0026amp; -\\sigma_{x} \u0026amp; 0 \u0026amp; 0\\\\ 0 \u0026amp; 0 \u0026amp; -\\sigma_{x} \u0026amp; 0\\\\ 0 \u0026amp; 0 \u0026amp; 0 \u0026amp; -\\sigma_{x}\\\\ \\end{bmatrix}, $$\n是反流速度算符的x分量(我们将电场设置在x轴上), $G_{k\\mu}^{r}(\\omega)=(\\omega-\\epsilon_{k\\mu}^{\\star}+i/2\\tau_{0})^{-1}$ 是带有 $\\mu$ 标签的逆变换格林函数, 表示两个Dirac带的能量色散, $\\epsilon_{k\\mu}^{\\star}=\\mu v^{\\star}k$ 是小动量条件下转角双层石墨烯的能量色散.\nFor an electron-doped system the valence band can be neglected and\n$\\sigma_{CF}\\approx e^2g\\tau\\nu^{\\star}(\\epsilon_{F})\\int\\frac{d\\theta_{k}}{2\\pi}|\\langle\\psi_{k\\mu}|\\nu_{CF}^{x}|\\psi_{k\\mu}\\rangle|^2$\nwhere $v^{\\star}$ is the DOS of the twisted bilayer.The vertex function\n$\\langle\\psi_{k}|v_{CF}^{x}|\\psi_{k}\\rangle=v_{CF}\\cos{\\theta_{k}}$,\nwhere $v_{CF}=v(1+3\\alpha^2)/(1+6\\alpha^2)$ follows directly from the previous section if we notice the sign differences between the counterflow velocity operator and the normal velocity operator. The counterflow conductivity is then\n$\\sigma_{CF}=\\sigma_{0}(\\frac{v_{CF}}{v^{\\star}})^2$\nwhere $\\sigma_{0}~e^2\\epsilon_{F}\\tau/\\pi$ is the conductivity of an isolated single graphene layer. As $\\theta$ is reduced from a large value toward 1°, $v^{\\star}$ is reduced and the DOS is correspondingly increased. The counterflow conductivity is enhanced because of an increased density of carriers, which is not accompanied by a decrease in counterflow velocity. For a conventional measurement in which the current in the bilayer is unidirectional $v_{CF}$ in Eq. 16 is replaced by $v^{\\star}$. The increase in the DOS is then exactly compensated by the reduction of the renormalized velocity and the single-layer value of the conductivity is regained.\n译:\n对于一个电子掺杂的系统, 可以忽略价带, 并且\n$\\sigma_{CF}\\approx e^2g\\tau\\nu^{\\star}(\\epsilon_{F})\\int\\frac{d\\theta_{k}}{2\\pi}|\\langle\\psi_{k\\mu}|\\nu_{CF}^{x}|\\psi_{k\\mu}\\rangle|^2$\n其中, $v^{\\star}$ 是双层扭转石墨烯的态密度.顶点函数\n$\\langle\\psi_{k}|v_{CF}^{x}|\\psi_{k}\\rangle=v_{CF}\\cos{\\theta_{k}}$,\n其中, $v_{CF}=v(1+3\\alpha^2)/(1+6\\alpha^2)$ 直接从前面的章节得到, 如果我们注意到反流速度算符和正常速度算符之间的符号差异.反流电导率为\n$\\sigma_{CF}=\\sigma_{0}(\\frac{v_{CF}}{v^{\\star}})^2$\n其中, $\\sigma_{0}~e^2\\epsilon_{F}\\tau/\\pi$ 是单层石墨烯的电导率. 当 $\\theta$ 从一个大的值减小到1°时, $v^{\\star}$ 减小, 态密度相应增加. 反流电导因载流子密度的增加而增加, 而不伴随相对流速的减小. 对于常规测量, 其中双层石墨烯中的电流是单向的, 式子16中的 $v_{CF}$ 被 $v^{\\star}$ 取代. 态密度的增加被粒子速度的减小所精确补偿, 单层的电导率得以恢复.\nDependence of the Spectrum on $\\vec{d}$ We now show that the spectrum of misaligned bilayers is independent of linear translations of one layer with respect to the other using a unitary transformation that makes the Hamiltonian independent of $\\vec{d}$. Consider $H_{\\vec{Q}}$ where $\\vec{Q}$ is a momentum in the first moiré Brillouin zone. With each momentum on the $k$-space triangular Bravais lattice (see Fig. 1)\n$\\vec{k}=\\vec{Q}+n\\vec{q_1}+m\\vec{q_2}$,\nwhere $\\vec{q_1}=k_{\\theta}(\\frac{1}{2},\\frac{\\sqrt{3}}{2})$ and $\\vec{q_2}=k_{\\theta}(-\\frac{1}{2},\\frac{\\sqrt{3}}{2})$, we associate the phase\n$\\Phi^{k}=n\\vec{G_{2}\u0026rsquo;}\\cdot\\vec{d}+m\\vec{G_{3}\u0026rsquo;}\\cdot\\vec{d}$.\nThe phase associated with momentum $\\vec{k}-\\vec{k_{\\theta}}\\hat{y}$ on the other sublattice is $\\Phi_{\\vec{k}}$ as well. In terms of the new basis states $e^{i\\Phi_{\\vec{k}}}|\\vec{k}\\alpha\\rangle$ the Hamiltonian $H_{\\vec{Q}}$ is $d$-independent.\nPhysically, the lack of dependence on $\\vec{d}$ can be understood by noticing that varying $\\vec{d}$ just shifts the moiré pattern in space. The bilayer spectrum does depend on $\\vec{d}$ at $\\theta=0$, and at other commensurate angles. We expect that dependence on $\\vec{d}$ will be observable only at short period (large $\\theta$) commensurate angles.\n译:\n我们现在证明错位双层体系的能谱与其中一层的线性平移无关, 通过一个幺正变换使得哈密顿量不依赖于 $\\vec{d}$. 考虑动量 $\\vec{Q}$ 在第一个摩尔布里渊区的哈密顿量 $H_{\\vec{Q}}$ . 对于每个 $k$ 空间三角布拉维格子上的动量为（见图1）\n$\\vec{k}=\\vec{Q}+n\\vec{q_1}+m\\vec{q_2}$,\n其中 $\\vec{q_1}=k_{\\theta}(\\frac{1}{2},\\frac{\\sqrt{3}}{2})$, $\\vec{q_2}=k_{\\theta}(-\\frac{1}{2},\\frac{\\sqrt{3}}{2})$,\n我们关联相位\n$\\Phi^{k}=n\\vec{G_{2}\u0026rsquo;} \\cdot \\vec{d}+m\\vec{G_{3}\u0026rsquo;} \\cdot \\vec{d}$.\n在另一个亚晶格上, 关联于动量 $\\vec{k}-\\vec{k_{\\theta}}\\hat{y}$ 的相位同样是 $\\Phi_{\\vec{k}}$ . 在新的基态 $e^{i\\Phi_{\\vec{k}}}|\\vec{k}\\alpha\\rangle$ 下, 哈密顿量 $H_{\\vec{Q}}$ 并非 $\\vec{d}$ 的函数.\n物理上, 不依赖于 $\\vec{d}$ 可以理解为改变 $\\vec{d}$ 只是在空间中平移moire图案. 只有在 $\\theta=0$ 和其他共格角度时, 双层能谱才会取决于 $\\vec{d}$.\n我们预计只有在短周期（即大 $\\theta$）的共格角度时, 才能观察到 $\\vec{d}$ 的依赖性.\n共格角度Commensurate Angles\n在物理学中, 两个周期性结构的共格是指它们之间存在匹配的空间排列方式.如果两个晶格的晶格常数和晶向满足特定的关系, 则它们的共格就被称为共格结构, 这个特定的关系被称为“共格条件”.如果两个周期性结构的共格条件不被满足, 它们之间的匹配就被称为“不共格”（incommensurate）.\n对于双层石墨烯, 当两层图案之间的角度非常接近特定角度时, 双层石墨烯就会表现出一些特殊的物理性质, 比如出现了长周期的moire图案和扭曲的带结构.这些特殊的角度被称为共格角度（commensurate angles）, 因为在这些角度下, 两层之间的moire图案可以完美地对齐, 形成一种共格结构.\nDiscussion Twisted double-layer graphene is, for most values of $\\theta$, a quasiperiodic structure that has no unit cell. Nevertheless, we find that for $\\theta ≲ 10°$ it is meaningful to describe the electronic structure of the system in terms of Bloch bands. The hidden periodic structure is shown to be related to the moiré pattern of the overlaid layers (27).\nThe leading corrections to the periodic moiré band Hamiltonian involve hopping amplitudes with the smallest momenta $\\vec{g}$ that satisfy the crystal momentum conservation condition in Eq. 5 and are larger than $k_{D}$ . As we showed in ref. 19, real space commensuration between the two rotated hexagonal lattice is concomitant to momentum space commensuration of the Dirac points in the extended-zone scheme (see figures 2 and 3 in ref. 19). The commensurate vector $\\vec{g}$ can therefore be found using the formula for the moiré periodicity if the lattice vector of $\\sqrt{3}a$ (where a is the carbon-carbon distance in a single-layer graphene) is replaced by the reciprocal lattice vector $G$ . It follows that $g(\\theta)\\approx G/\\theta$. For example $g(10°)=24/a$ and $g(2°)$ . As Fig. 2 demonstrates, the hopping amplitudes for these large wave vectors are indeed negligible compared to the value of $t_{k_{D}}$ . We therefore expect the continuum model to be very accurate up to energies of approximately $1 eV$ and up to angles of approximately $10°$.\n译:\n在大多数 $\\theta$ 值下,扭转双层石墨烯都是一种无定晶胞的准周期结构. 然而, 我们发现对于 $\\theta ≲ 10°$ , 用布洛赫能带描述系统的电子结构很有意义. 隐藏的周期性结构被证明与重叠层的moire图案有关(27).\n对周期性moire带哈密顿量的主要修正是这样的:跃迁振幅对应的动量,要同时满足三个条件,即(1)晶体动量守恒条件(方程5);(2)大于 $k_{D}$;(3)满足(1),(2)的同时要尽可能最小.\n正如我们在参考文献19中所示, 转角双层石墨烯结构的实空间共格现象 与 扩展区方案中Dirac点动量空间共格现象是一致的（参见参考文献19中的图2和图3）. 因此, 如果将 $\\sqrt{3}a$ 的晶格矢量（其中a是单层石墨烯中的碳-碳距离）替换为倒易晶格矢量$G$, 就可以使用moire周期公式找到共格矢量 $\\vec{g}$.\n于是就有 $g(\\theta)\\approx G/\\theta$.例如, $g(10°)=24/a$和$g(2°)$.\n正如图2所示, 对于这些大波矢, 跃迁振幅与 $t_{k_{D}}$ 的值相比确实微不足道. 所以我们预计,连续模型在能量达到约 $1eV$ 且 角度达到约 $10°$ 时非常精确.\nThe Bloch band model has a simple and appealing physical interpretation. The hopping Hamiltonian is local in space. At each position, its 4 × 4 matrix, describes sublattice-dependent interlayer hopping, which depends on the local coordination between the atoms in the two layers. In Fig. 5 we have plotted the moiré pattern of atomic positions and the smaller of the two positive eigenvalues of the hopping Hamiltonian as a function of position on the same length scale. At each position, the local interlayer tunneling Hamiltonian, is that of a system in which the local coordination is maintained through all space. At AB and BA points, for example, the tunneling Hamiltonian is that of AB and BA systems, for which tunneling does not produce a gap so that the smallest positive eigenvalue vanishes. On the other hand the gap reaches its maxima ($6w$) at AA points in the moiré pattern.\nIn summary we have formulated a continuum model description of the electronic structure of rotated graphene bilayers. The resulting moiré band structure can be evaluated at arbitrary twist angles, not only at commensurate values. We find that the velocity at the Dirac point oscillates with twist angle, vanishing at a series of magic angles which give rise to large DOS and to large counterflow conductivities. Many properties of the moiré bands are still not understood. For example, although we are able to explain the largest magic angle analytically, the pattern of magic angles at smaller values of θ has so far been revealed only numerically. Additionally the flattening of the entire lowest moiré band at $\\theta\\approx 1.05°$ remains a puzzle. Interesting new issues arise when our theory is extended to graphene stacks containing three or more layers. Finally, we remark that electron-electron interactions neglected in this work are certain to be important at magic twist angles in neutral systems and could give rise to counterflow superfluidity (28, 29), flat-band magnetism (30), or other types of ordered states.\n译:\nBloch带模型有一个简单而有吸引力的物理解释. 跃迁哈密顿量在空间上是局域的.\n在每个位置, 它的 $ 4\\times 4$ 矩阵描述了亚晶格相关的层间跃迁, 这取决于两层原子之间的局部配位.\n在图5中, 我们绘制了原子位置的moire图案和跃迁哈密顿量的两个最小正本征值, 它们在相同的长度尺度上随位置变化.\n在每个位置上, 局部层间隧道哈密顿量都是保持空间中所有位置的局部配位不变的系统的哈密顿量.\n例如, 在AB点和BA点, 隧道哈密顿量是AB和BA系统的哈密顿量, 在这些系统中, 隧道跃迁不会产生能隙, 因此最小正本征值为零. 另一方面, 能隙在moire图案的AA点处达到最大值（$6w$）.\n总之, 我们已经制定了一个连续模型来描述旋转石墨烯双层体系的电子结构. 得到的moire带结构可以在任意扭角下进行评估, 而不仅仅是在共格值处.\n我们发现, 在Dirac点处的速度随旋转角增大而振荡, 在一系列魔角处消失, 这产生了大的态密度和大的反流电导率. moire带的许多性质仍然不为人们所理解. 例如, 虽然我们能够解释最大的魔角, 但在较小的 $\\theta$ 值处的魔角模式到目前为止只能通过数值方法揭示. 此外, 在 $\\theta\\approx 1.05°$ 处的整个最低moire带的平坦化仍然是一个谜. 当我们的理论扩展到包含三个或更多层的石墨烯堆叠时, 会出现一些有趣的新问题. 最后, 我们指出, 本文忽略的电子间相互作用在中性系统的魔角处肯定是重要的, 并且可能会产生反流超流动性、平带磁性或其他类型的有序状态(28,29,30).\n","permalink":"https://Muatyz.github.io/posts/read/moire-bands/","summary":"Moiré bands in twisted double-layer graphene 双层石墨烯出现转角时, 在整体层面会出现摩尔纹. Abstract A moiré pattern is formed when two copies of a periodic pattern are overlaid with a relative twist. We address the electronic structure of a twisted two-layer graphene system, showing that in its continuum Dirac model the moiré pattern periodicity leads to moiré Bloch bands. The two layers become more strongly coupled and the Dirac velocity crosses zero several times as the twist angle is reduced. For a discrete set of magic angles the velocity vanishes, the lowest moiré band flattens, and the Dirac-point density-of states and the counterflow conductivity","title":"[中字]Moiré bands in twisted double-layer graphene"},{"content":"get commit 在当前分支创建一个提交记录\n分支 创建新分支\ngit branch \u0026lt;branch-name\u0026gt; 创建分支后直接使用\ngit commit 并不会在新分支产生提交记录, 这是因为没有切换到新分支.\ngit 工具会使用*来提示你目前所在的分支.\ngit checkout \u0026lt;branch-name\u0026gt; 切换到名为 branch-name 的分支, 这个时候提交就可以在该分支下产生新提交记录了.\n把这两个功能整合起来的命令:\ngit checkout -b \u0026lt;branch-name\u0026gt; 合并 对于同一父节点有着不同的分支, 这两个分支表示各有一个独立提交.\n把branch-name 合并到 main 里:\ngit merge \u0026lt;branch-name\u0026gt; 这会产生一个新节点 C4, 其父节点为 main 和 branch-name 的最新提交记录所表示的结点(C2和C3).\n在此基础上再将 main 合并到 branch-name, 因为此时 main 继承自 branch-name, 所以只会把 branch-name 代表的指针移动到最后产生的结点(C4)\nRebase 这是另一种合并分支的方法, 就是去除一系列的提交记录, 将其在另一个地方逐一执行. 这可以让代码库的提交历史变得更清晰.\n假设 main 和 bugFix 的分支自结点C1, 各自的最新提交记录结点为 C2 和 C3, 目前所在分支是 bugFix.\nC2 和 C3的工作可以是并行的.\n现在使用 rebase 命令实现合并, 这会使得两个分支的功能像是顺序实现的.\ngit rebase main 这会产生一个新结点C3', 其父节点为 C2, main 停留在 C2, bugFix 停留在 C3', 目前所在分支仍然为 bugFix.\n现在我们需要使 main 得到更新:\ngit checkout main;git merge bugFix; 因为 bugFix 继承自 main, 所以git 要做到以上指令, 只需要将 main 指针移动到 C3' 即可.\n目前所在分支为 main.\n分离 如何在提交树上移动?\nHead 是一个对当前分支的符号引用, 它用来指代当前分支的最新提交记录. 这也意味着 Head 会随着你的提交而更新.\n现在我们要让 HEAD 指向 具体的提交记录而并非分支名.\n假设这样一个状态:main*指针指向最新提交记录C1, HEAD 指向 main.\n即\nHEAD -\u0026gt; main -\u0026gt; C1\n我们执行命令:\ngit checkout C1 这样就变成了\nHEAD -\u0026gt; C1\n当然在具体的操作实践中, 结点的记录不会像 C1 这样简单, 而是一个更复杂的哈希值(可以长达40位!).\n相对引用 Git 对于哈希值的处理有一定的智能, 它允许你可以只使用哈希值的前几个字符来指代对应的提交记录, 而无需将哈希值完整写出.\n你可以通过\ngit log 来查看提交记录的哈希值.\n如果是通过相对引用, 就可以不用使用哈希值.\n两种常见的移动方法:\n使用^向上移动一个提交记录\n具体用法是将^加在引用名称的后面, 比如\ngit checkout main^ 将 HEAD 切换到 main 的父节点.\nHEAD 本身也可以作为引用名称的对象.\n使用~\u0026lt;num\u0026gt;向上移动 num 个提交记录\ngit checkout HEAD~4 这将使得 HEAD 指针移到 HEAD 的第四个父节点.\n使用 -f 来让分支指向另一个提交.(-f 代表强制)\ngit branch -f main HEAD~3 这会将 main 分支强制指向 HEAD 的第3级父提交.\n撤销变更 有两种实现方法:\ngit reset\n这会使得提交记录回溯, 原来指向的提交记录会被代码库忽略.\n但是原提交记录所作出变更还在, 只是没有加入暂存区.\n这个只适用于本地代码库, 对于远程分支是无效的.\ngit revert C2\n为了将撤销更改分享给别人, 需要用到这个指令.\n这会产生一个新的提交记录结点C2\u0026rsquo;, 这个更改是用来撤销C2的. 即 C2\u0026rsquo; 状态也就是 C1.\n注意辨别两个指令在使用的时候所使用的坐标是谁.\n整理提交记录 现在我们需要处理更复杂的工作流了.\ngit cherry-pick \u0026lt;commit\u0026gt; 假设 C2 和 C5 分支自共有父节点 C1, 而C2后的提交记录分别是C3, C4.\n现在main指针指向 C5, side 指针指向 C4. 且当前所在分支为main.(git 工具会提示你main*)\n我们执行\ngit cherry-pick C2 C4 这会使得 C5 后依次出现新提交记录 C2' 和 C4', 并且 main* 指向C4'.\n交互式 rebase 在我们并不清楚提交记录的哈希值的时候, git 提供了一个方法.\n--interactive 或者 -i, 这会使 Git 打开一个 UI 界面并列出提交记录的哈希值和提交说明.\n在实际操作中, 这个 UI 窗口可能仅仅只是一个文本编辑器中的界面. VS Code 中的代码管理会比这个更人性化一些.\n具体来说里面有若干个提交记录, 通过鼠标点击拖动来调整或者忽略这些结点顺序.\n只取一个提交记录 为了调试而在代码中添加了一些调试命令, 这部分代码在正式的 使用中显然是不会用到的.\n实际上我们只需要\u0026rsquo;刚好能解决问题并且没有任何调试代码\u0026rsquo;的那一个提交记录就可以了.\n我们可以借助之前所学的命令来达成这一目的.\ngit rebase -i\ngit cherry-pick\ngit checkout main; git cherry-pick bugFix; 或者\ngit rebase -i main bugFix; git branch -f main HEAD 提交的技巧 假设在 newImage 分支进行了一次提交, 又在这个提交基础上创建了 caption 分支, 然后又在 caption 分支上进行了一次提交.\n现在如果要对 newImage 中的提交进行修改, 就需要进行一些修改和排序.\n","permalink":"https://Muatyz.github.io/posts/cs/tech/","summary":"get commit 在当前分支创建一个提交记录 分支 创建新分支 git branch \u0026lt;branch-name\u0026gt; 创建分支后直接使用 git commit 并不会在新分支产生提交记录, 这是因为没有切换到新分支. git 工具会使用*来提示你目前所在的分支. git checkout \u0026lt;branch-name\u0026gt; 切换到名为 branch-name 的分支, 这个时候提交就可以在该分支下产生新提交记录了. 把这两个功能整合起来的命令: git checkout -b \u0026lt;branch-name\u0026gt; 合并 对于","title":"Github基础语法说明"},{"content":" Sulv\u0026#39;s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： Blog-Name 网址： https://www.blogurl 图标： https://www.blogurl/img/Title.png 描述： Description of the site 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n","permalink":"https://Muatyz.github.io/links/","summary":"Sulv\u0026#39;s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： Blog-Name 网址： https://www.blogurl 图标： https://www.blogurl/img/Title.png 描述： Description of the site 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内","title":"🤝友链"}]